[{"/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/index.js":"1","/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/App.js":"2","/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/reportWebVitals.js":"3","/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/pages/Landing.js":"4","/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/pages/Profile.js":"5","/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/pages/Main.js":"6","/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/components/MainHeader.js":"7","/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/components/ProfileHeader.js":"8","/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/components/LoginForm.js":"9","/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/components/PostGrid.js":"10","/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/components/UserInfoGrid.js":"11","/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/components/Posts.js":"12","/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/components/RegistrationForm.js":"13","/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/index.js":"14","/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/App.js":"15","/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/reportWebVitals.js":"16","/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/pages/Landing.js":"17","/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/pages/Main.js":"18","/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/pages/Profile.js":"19","/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/components/PostGrid.js":"20","/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/components/RegistrationForm.js":"21","/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/components/MainHeader.js":"22","/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/components/Posts.js":"23","/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/components/ProfileHeader.js":"24","/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/components/UserInfoGrid.js":"25","/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/components/LoginForm.js":"26","/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/index.js":"27","/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/App.js":"28","/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/reportWebVitals.js":"29","/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/pages/Main.js":"30","/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/pages/Profile.js":"31","/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/pages/Landing.js":"32","/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/components/UserInfoGrid.js":"33","/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/components/PostGrid.js":"34","/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/components/ProfileHeader.js":"35","/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/components/RegistrationForm.js":"36","/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/components/MainHeader.js":"37","/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/components/LoginForm.js":"38","/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/components/Posts.js":"39","/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/components/Pagination.js":"40"},{"size":537,"mtime":1696980847200,"results":"41","hashOfConfig":"42"},{"size":508,"mtime":1696999731384,"results":"43","hashOfConfig":"42"},{"size":362,"mtime":1696912973320,"results":"44","hashOfConfig":"42"},{"size":718,"mtime":1697237289206,"results":"45","hashOfConfig":"42"},{"size":6639,"mtime":1698378015311,"results":"46","hashOfConfig":"42"},{"size":7815,"mtime":1698377798751,"results":"47","hashOfConfig":"42"},{"size":881,"mtime":1698266506724,"results":"48","hashOfConfig":"42"},{"size":508,"mtime":1697049707099,"results":"49","hashOfConfig":"42"},{"size":2208,"mtime":1698363580348,"results":"50","hashOfConfig":"42"},{"size":1259,"mtime":1698291136890,"results":"51","hashOfConfig":"42"},{"size":1274,"mtime":1698286192908,"results":"52","hashOfConfig":"42"},{"size":1369,"mtime":1698378983935,"results":"53","hashOfConfig":"42"},{"size":2660,"mtime":1698364771081,"results":"54","hashOfConfig":"42"},{"size":537,"mtime":1696980847200,"results":"55","hashOfConfig":"56"},{"size":508,"mtime":1696999731384,"results":"57","hashOfConfig":"56"},{"size":362,"mtime":1696912973320,"results":"58","hashOfConfig":"56"},{"size":718,"mtime":1697237289206,"results":"59","hashOfConfig":"56"},{"size":7815,"mtime":1698377798751,"results":"60","hashOfConfig":"56"},{"size":6639,"mtime":1698378015311,"results":"61","hashOfConfig":"56"},{"size":1259,"mtime":1698291136890,"results":"62","hashOfConfig":"56"},{"size":2660,"mtime":1698364771081,"results":"63","hashOfConfig":"56"},{"size":881,"mtime":1698266506724,"results":"64","hashOfConfig":"56"},{"size":1369,"mtime":1698378983935,"results":"65","hashOfConfig":"56"},{"size":508,"mtime":1697049707099,"results":"66","hashOfConfig":"56"},{"size":1274,"mtime":1698286192908,"results":"67","hashOfConfig":"56"},{"size":2208,"mtime":1698363580348,"results":"68","hashOfConfig":"56"},{"size":326,"mtime":1701556133673,"results":"69","hashOfConfig":"70"},{"size":508,"mtime":1696999731384,"results":"71","hashOfConfig":"70"},{"size":362,"mtime":1696912973320,"results":"72","hashOfConfig":"70"},{"size":5960,"mtime":1701571887474,"results":"73","hashOfConfig":"70"},{"size":9492,"mtime":1701572037179,"results":"74","hashOfConfig":"70"},{"size":718,"mtime":1697237289206,"results":"75","hashOfConfig":"70"},{"size":2117,"mtime":1701571752462,"results":"76","hashOfConfig":"70"},{"size":1731,"mtime":1701578225470,"results":"77","hashOfConfig":"70"},{"size":508,"mtime":1697049707099,"results":"78","hashOfConfig":"70"},{"size":4037,"mtime":1701568199070,"results":"79","hashOfConfig":"70"},{"size":1094,"mtime":1701571653493,"results":"80","hashOfConfig":"70"},{"size":2711,"mtime":1701563731352,"results":"81","hashOfConfig":"70"},{"size":4919,"mtime":1701577511743,"results":"82","hashOfConfig":"70"},{"size":631,"mtime":1701553842800,"results":"83","hashOfConfig":"70"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4z8mw6",{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4mnf8p",{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qwnyo5",{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"172"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/index.js",[],[],"/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/App.js",[],[],"/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/reportWebVitals.js",[],[],"/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/pages/Landing.js",[],[],"/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/pages/Profile.js",["214","215"],[],"import React, { useState } from \"react\";\nimport ProfileHeader from '../components/ProfileHeader';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst ProfilePage = () => {\nconst navigate = useNavigate();\nconst location = useLocation();\nconst userData = location.state.userData;\nconst [profilePicture, setProfilePicture] = useState(null);\n\nconst defaultProfilePicture = \n'https://media.istockphoto.com/id/1437816897/photo/business-woman-manager-or-human-resources-portrait-for-career-success-company-we-are-hiring.webp?b=1&s=170667a&w=0&k=20&c=YQ_j83pg9fB-HWOd1Qur3_kBmG_ot_hZty8pvoFkr6A=';\n\n  const [curName, setCurName] = useState(userData.username);\n  const [curEmail, setCurEmail] = useState(userData.email);\n  const [curPhone, setCurPhone] = useState(userData.phone);\n  const [curZip, setCurZip] = useState(userData.address.zipcode);\n  const [curPassword, setCurPassword] = useState('*'.repeat(userData.address.street.length));\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const [nameMessage, setNameMessage] = useState(\"\");\n  const [emailMessage, setEmailMessage] = useState(\"\");\n  const [phoneMessage, setPhoneMessage] = useState(\"\");\n  const [zipMessage, setZipMessage] = useState(\"\");\n  const [passwordMessage, setPasswordMessage] = useState(\"\");\n  const [confirmPasswordMessage, setConfirmPasswordMessage] = useState(\"\");\n\n  const validate = () => {\n    if (name !== \"\") {\n      if (name === curName) {\n        setNameMessage(\"Please provide a different value for updating your profile information.\");\n      } else {\n        setNameMessage(\"\");\n        setCurName(name);\n      }\n    } else {\n        setNameMessage(\"\")\n    }\n    if (email !== \"\") {\n      const emailPattern = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;\n      if (!emailPattern.test(email)) {\n        setEmailMessage(\"Please enter a valid email address.\");\n      } else if (email === curEmail) {\n        setEmailMessage(\"Please provide a different value for updating your email.\");\n      } else {\n        setEmailMessage(\"\");\n        setCurEmail(email);\n      }\n    } else {\n        setEmailMessage(\"\")\n    }\n\n    if (phone !== \"\") {\n      const phonePattern = /^[0-9]{3}-[0-9]{3}-[0-9]{4}$/;\n      if (!phonePattern.test(phone)) {\n        setPhoneMessage(\"Please enter a valid phone number in 123-123-1234 format.\");\n      } else if (phone === curPhone) {\n        setPhoneMessage(\"Please provide a different value for updating your phone number.\");\n      } else {\n        setPhoneMessage(\"\");\n        setCurPhone(phone);\n      }\n    } else {\n        setPhoneMessage(\"\")\n    }\n\n    if (zip !== \"\") {\n      const zipPattern = /^[0-9]{5}$/;\n      if (!zipPattern.test(zip)) {\n        setZipMessage(\"Please enter a valid 5-digit US zip code.\");\n      } else if (zip === curZip) {\n        setZipMessage(\"Please provide a different value for updating your zip code.\");\n      } else {\n        setZipMessage(\"\");\n        setCurZip(zip);\n      }\n    } else {\n        setZipMessage(\"\")\n    }\n\n    if (password !== \"\") {\n      if (password !== confirmPassword) {\n        setPasswordMessage(\"Password and confirmation do not match.\");\n      } else if (password === curPassword) {\n        setPasswordMessage(\"Please provide a different value for updating your password.\");\n      } else {\n        setPasswordMessage(\"\");\n        setCurPassword(password);\n      }\n    } else {\n        setPasswordMessage(\"\");\n    }\n\n    setName(\"\");\n    setEmail(\"\");\n    setPhone(\"\");\n    setZip(\"\");\n    setPassword(\"\");\n    setConfirmPassword(\"\");\n\n  };\n\n  return (\n    <div className=\"container\">\n      <ProfileHeader navigate={navigate} userData={userData}/>\n      <div className=\"profile-picture-container\">\n          {profilePicture ? (\n            <img src={URL.createObjectURL(profilePicture)} alt=\"Profile\" className=\"profile-picture\" />\n          ) : (\n            <img src={defaultProfilePicture} alt=\"Default Profile\" className=\"profile-picture\" />\n          )}\n          <input type=\"file\" className=\"\" accept=\"image/*\" />\n        </div>\n      <table className=\"styled-table\" id=\"pf\">\n        <thead>\n          <tr className=\"table-key\">\n            <th>Key</th>\n            <th>Input</th>\n            <th>Value</th>\n            <th>Message</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td className=\"key\">Display Name</td>\n            <td><input type=\"text\" className=\"field\" value={name} onChange={(e) => setName(e.target.value)} /></td>\n            <td className=\"hc\" id=\"dis-name\">{curName}</td>\n            <td id=\"msg-name\">{nameMessage}</td>\n          </tr>\n          <tr>\n            <td className=\"key\">Email Address</td>\n            <td><input type=\"email\" className=\"field\" value={email} onChange={(e) => setEmail(e.target.value)} /></td>\n            <td className=\"hc\" id=\"dis-email\">{curEmail}</td>\n            <td id=\"msg-email\">{emailMessage}</td>\n          </tr>\n          <tr>\n            <td className=\"key\">Phone Number</td>\n            <td><input type=\"tel\" className=\"field\" value={phone} onChange={(e) => setPhone(e.target.value)} /></td>\n            <td className=\"hc\" id=\"dis-phone\">{curPhone}</td>\n            <td id=\"msg-phone\">{phoneMessage}</td>\n          </tr>\n          <tr>\n            <td className=\"key\">Zip Code</td>\n            <td><input type=\"text\" className=\"field\" value={zip} onChange={(e) => setZip(e.target.value)} /></td>\n            <td className=\"hc\" id=\"dis-zip\">{curZip}</td>\n            <td id=\"msg-zip\">{zipMessage}</td>\n          </tr>\n          <tr>\n            <td className=\"key\">Password</td>\n            <td><input type=\"password\" className=\"field\" value={password} onChange={(e) => setPassword(e.target.value)} /></td>\n            <td className=\"hc\" id=\"dis-password\">{\"*\".repeat(curPassword.length)}</td>\n            <td id=\"msg-password\">{passwordMessage}</td>\n          </tr>\n          <tr>\n            <td className=\"key\">Password Confirmation</td>\n            <td><input type=\"password\" className=\"field\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} /></td>\n            <td className=\"hc\" id=\"dis-confirm\">{\"*\".repeat(curPassword.length)}</td>\n            <td id=\"msg-confirm\">{confirmPasswordMessage}</td>\n          </tr>\n        </tbody>\n      </table>\n      <div className=\"btn-container\">\n        <button onClick={validate}>Update</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n","/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/pages/Main.js",["216","217","218"],[],"import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport MainHeader from '../components/MainHeader';\nimport Posts from '../components/Posts';\nimport UserInfoGrid from '../components/UserInfoGrid';\nimport PostGrid from '../components/PostGrid';\nimport userPostsTest from '../posts.json';\nimport usersInfo from '../users.json'\n\n\nconst MainPage = () => {\n  const [userPosts, setUserPosts] = useState([]);\n  const navigate = useNavigate();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [newFollowerName, setNewFollowerName] = useState('');\n  const [followedUsers, setFollowedUsers] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const location = useLocation();\n  const userData = location.state.userData;\n  const defaultPostImage = 'https://media.istockphoto.com/id/1420755455/photo/grunge-dirty-background-overlay.webp?b=1&s=170667a&w=0&k=20&c=7wfOkV1I0RJVAsuZlCzMD8zRenjlWo1hUYCAIsGBckw=';\n  useEffect(() => {\n    const fetchFollowers = async () => {\n        // const response = await fetch('https://jsonplaceholder.typicode.com/users');\n        // const data = await response.json();\n        const data = usersInfo;\n\n        if (!Number.isInteger(userData.id)) {\n          setFollowedUsers([])\n          return ([])\n        }\n        const loggedInUser = data.find(user => user.id === userData.id);\n        const followingIds = Array.from({ length: 3 }, (_, index) => (userData.id + index + 1) % 10 || 10);\n        const followedUsersList = data.filter(user => followingIds.includes(user.id) && user.id !== userData.id);\n\n        setFollowedUsers(followedUsersList);\n        return followedUsersList;\n    };\n\n    const fetchUserPosts = async (followedUsers) => {\n        // const responseForLoggedUser = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${userData.id}`);\n        // const postsForLoggedUser = await responseForLoggedUser.json();\n        const postsForLoggedUser = userPostsTest.filter(post => post.userId === userData.id);\n        // const postsPromises = followedUsers.map(user => \n        //     fetch(`https://jsonplaceholder.typicode.com/posts?userId=${user.id}`).then(res => res.json())\n        // );\n        const postsPromises = followedUsers.map(user => \n          userPostsTest.filter(post => post.userId === user.id)\n        );\n        \n        const postsResults = await Promise.all(postsPromises);\n\n        const flattenedFollowedUsersPosts = [].concat(...postsResults).map(post => {\n            const userForPost = followedUsers.find(u => u.id === post.userId);\n            return {\n                ...post,\n                user: userForPost,\n                timestamp: new Date(Date.now() - Math.floor(Math.random() * 10 * 365 * 24 * 60 * 60 * 1000)).toLocaleString(),\n                image: defaultPostImage\n            };\n        });\n\n        const userPostsList = postsForLoggedUser.map(post => ({\n            ...post,\n            user: userData,\n            timestamp: new Date(Date.now() - Math.floor(Math.random() * 10 * 365 * 24 * 60 * 60 * 1000)).toLocaleString(),\n            image: defaultPostImage\n        }));\n\n        const mergedPosts = [...userPostsList, ...flattenedFollowedUsersPosts];\n\n        const sortedPosts = mergedPosts.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n        setUserPosts(sortedPosts);\n    };\n    fetchFollowers().then(\n      followedUsers => fetchUserPosts(followedUsers));\n    // fetchFollowers().then(\n    // fetchUserPosts(followedUsers)\n\n }, [userData.id]);\n\n\n  const handleAddFollower = async () => {\n    // const response = await fetch('https://jsonplaceholder.typicode.com/users');\n    // const users = await response.json();\n    const users = usersInfo;\n\n    const newFollower = users.find(user => user.username.toLowerCase() === newFollowerName.toLowerCase());\n  \n    if (newFollower && newFollower.id != userData.id) {\n      setFollowedUsers([...followedUsers, newFollower]);\n      // const responseForNewFollower = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${newFollower.id}`);\n      // const postsForNewFollower = await responseForNewFollower.json();\n      const postsForNewFollower = userPostsTest.filter(post => post.userId === newFollower.id)\n\n\n      const postsWithTimestampAndImage = postsForNewFollower.map(post => ({\n        ...post,\n        user: newFollower,\n        timestamp: new Date(Date.now() - Math.floor(Math.random() * 10 * 365 * 24 * 60 * 60 * 1000)).toLocaleString(),\n        image: defaultPostImage\n      }));\n      \n      const updatedPosts = [...userPosts, ...postsWithTimestampAndImage];\n      const sortedPosts = updatedPosts.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n      setUserPosts(sortedPosts);\n      setErrorMessage(''); \n    } else {\n      setErrorMessage('User not found or invalid.');\n    }\n  \n    setNewFollowerName('');\n  };\n  \n\n  const handleUnfollow = userId => {\n    const updatedFollowedUsers = followedUsers.filter(user => user.id !== userId);\n    setFollowedUsers(updatedFollowedUsers);\n    const updatedPosts = userPosts.filter(post => post.user.id !== userId);\n    const sortedPosts = updatedPosts.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n    setUserPosts(sortedPosts);\n  };\n\n  const handleSearch = (e) => {\n    setSearchQuery(e.target.value)\n    \n    \n  };\n\n  const handleComment = postId => {\n  };\n\n  const handleEdit = postId => {\n  \n  };\n\n  const handlePostSubmit = newPost => {\n    setUserPosts([newPost, ...userPosts]);\n  };\n\n  const handleStatusUpdate = newStatus => {\n\n  };\n\n  return (\n    <div>\n      <MainHeader navigate={navigate} userData={userData} />\n      <div className=\"main-content\">\n        <UserInfoGrid user={userData} onUpdateStatus={handleStatusUpdate} />\n        <PostGrid user={userData} onPostSubmit={handlePostSubmit} />\n      </div>\n      <div className=\"sidebar\">\n        <h2 className = \"follow-user-h2\">Followed Users</h2>\n        <ul className=\"follow-user-ul\">\n          {followedUsers.map(user => (\n            <li className='follow-user-li'key={user.id}>\n              <img className='follow-user-img' src=\"https://media.istockphoto.com/id/1403045742/photo/happy-mixed-race-father-and-son-brushing-their-teeth-together-in-a-bathroom-at-home-single.webp?b=1&s=170667a&w=0&k=20&c=siRQqYPxmZsWtoedb7eoQOzRvQl1GVg_ccCAOsICTCw=\" alt=\"Avatar\" />\n              <p>{user.username}</p>\n              <p>{user.company.catchPhrase}</p>\n\n              <button data-testid={`unfollow-${user.id}`} onClick={() => handleUnfollow(user.id)}>Unfollow</button>\n            </li>\n          ))}\n        </ul>\n        <input className='se'\n          type=\"text\"\n          data-testid='add-follower-name'\n          placeholder=\"Enter name\"\n          value={newFollowerName}\n          onChange={e => setNewFollowerName(e.target.value)}\n        />\n        <button data-testid='add-follower' onClick={handleAddFollower}>Add Follower</button>\n        {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n\n      </div>\n      <div className=\"search-bar\">\n        <input data-testid='search-test'\n          type=\"text\"\n          placeholder=\"Search by author or text...\"\n          value={searchQuery}\n          onChange={handleSearch}\n        />\n      </div>\n      <div data-testid='user-posts'>\n      {userPosts.filter(post => {\n        return post.title.toLowerCase().includes(searchQuery.toLowerCase()) || post.body.toLowerCase().includes(searchQuery.toLowerCase()) || post.user.username.toLowerCase().includes(searchQuery.toLowerCase()) ;\n      }).map(post => (\n        <Posts\n          key={post.id}\n          post={post}\n          onComment={handleComment}\n          onEdit={handleEdit}\n        />\n      ))}\n    </div>\n    </div>\n  );\n};\n\nexport default MainPage;\n\n","/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/components/MainHeader.js",[],[],"/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/components/ProfileHeader.js",["219"],[],"import React, { useState } from 'react';\n\nconst ProfileHeader = ({navigate, userData}) => {\n    const goToMain = () => {\n        navigate('/main', { state: { userData } });\n      };\n   \n    \n    return (\n    <div className=\"main-header\">\n        <h1>Profile Page</h1>\n        <div className='header-buttons'>\n            <div className='profile-to-main'>\n                <button type=\"button\" onClick={goToMain}>Main</button>\n            </div>\n        </div>\n    </div>\n    )\n}\nexport default ProfileHeader;","/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/components/LoginForm.js",[],[],"/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/components/PostGrid.js",[],[],"/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/components/UserInfoGrid.js",["220"],[],"import React, { useState } from 'react';\n\nconst UserInfoGrid = ({ user, onUpdateStatus }) => {\n  // make headline update persistent\n  const [status, setStatus] = useState(localStorage.getItem(`userStatus_${user.id}`) || user.company.catchPhrase);\n  const [newStatus, setNewStatus] = useState('');\n\n  const handleStatusUpdate = () => {\n    if (newStatus.trim() !== '') {\n      onUpdateStatus(newStatus);\n      setStatus(newStatus);\n      setNewStatus('');\n      localStorage.setItem(`userStatus_${user.id}`, newStatus);\n    }\n  };\n\n  return (\n    <div className=\"user-info-grid\">\n      <div>\n        <h3>{user.username}</h3>\n        <img src='https://media.istockphoto.com/id/1437816897/photo/business-woman-manager-or-human-resources-portrait-for-career-success-company-we-are-hiring.webp?b=1&s=170667a&w=0&k=20&c=YQ_j83pg9fB-HWOd1Qur3_kBmG_ot_hZty8pvoFkr6A='></img>\n      </div>\n      <p className=\"status\">{status}</p>\n      <div>\n        <input\n          type=\"text\"\n          value={newStatus}\n          onChange={(e) => setNewStatus(e.target.value)}\n          className=\"post-input\"\n        />\n        <button onClick={handleStatusUpdate} className=\"post-button\">\n          Update Status\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default UserInfoGrid;\n\n","/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/components/Posts.js",[],[],"/Users/gaoqiantong/Desktop/comp431/hw/hw5-Moongram/src/components/RegistrationForm.js",[],[],"/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/index.js",[],[],"/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/App.js",[],[],"/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/reportWebVitals.js",[],[],"/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/pages/Landing.js",[],[],"/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/pages/Main.js",["221","222","223"],[],"/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/pages/Profile.js",["224","225"],[],"/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/components/PostGrid.js",[],[],"/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/components/RegistrationForm.js",[],[],"/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/components/MainHeader.js",[],[],"/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/components/Posts.js",[],[],"/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/components/ProfileHeader.js",["226"],[],"/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/components/UserInfoGrid.js",["227"],[],"/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/components/LoginForm.js",[],[],"/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/index.js",[],[],"/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/App.js",[],[],["228"],"/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/reportWebVitals.js",[],[],"/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/pages/Main.js",["229","230","231","232","233","234","235"],[],"import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport MainHeader from '../components/MainHeader';\nimport Posts from '../components/Posts';\nimport UserInfoGrid from '../components/UserInfoGrid';\nimport PostGrid from '../components/PostGrid';\nimport axios from 'axios';\nimport Pagination from '../components/Pagination';\nconst MainPage = () => {\n  const [userPosts, setUserPosts] = useState([]);\n  const navigate = useNavigate();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [newFollowerName, setNewFollowerName] = useState('');\n  const [followedUsers, setFollowedUsers] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  const [currentPosts, setCurrentPosts] = useState([]);\n  const location = useLocation();\n  const userData = location.state.userData;\n  useEffect(() => {\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    setCurrentPosts(userPosts.slice(indexOfFirstPost, indexOfLastPost));\n  }, [currentPage, userPosts]);\n  \n\n useEffect(() => {\n  fetchUserPosts();\n  fetchFollowers();\n}, [userData.username]);\n const paginate = pageNumber => setCurrentPage(pageNumber);\n\n \n const fetchUserPosts = async () => {\n    try {\n      const response = await axios.get(`https://lily-social-app-7e0ca4e6d236.herokuapp.com/articles`, { withCredentials: true });\n      const articles = response.data.articles;\n      if (articles.length === 0) {\n        setUserPosts([]);\n        return ([])\n      } else {\n      const sortedPosts = articles.sort((a, b) => new Date(b.date) - new Date(a.date));\n      setUserPosts(sortedPosts);\n    }\n } catch (_error) {}\n};\n\n const fetchFollowers = async () => {\n  try {\n      const response = await axios.get(`https://lily-social-app-7e0ca4e6d236.herokuapp.com/following/${userData.username}`, { withCredentials: true });\n      const usernames = response.data.following;\n      if (usernames.length === 0) {\n        setFollowedUsers([]);\n        return ([])\n      }\n      const profiles = await Promise.all(\n        usernames.map(username =>\n            axios.get(`https://lily-social-app-7e0ca4e6d236.herokuapp.com/profile/${username}`, { withCredentials: true })\n                .then(res => res.data)\n                .catch(_err => {\n                    return null; \n                })\n        )\n    );\n      setFollowedUsers(profiles);\n      return profiles;\n  } catch (_error) {}\n};\n const handleAddFollower = async () => {\n  if (newFollowerName == userData.username) {\n    setErrorMessage(\"You cannot follow yourself.\");  \n    setNewFollowerName('');\n    return;\n  }\n  try {\n    const response = await axios.put(`https://lily-social-app-7e0ca4e6d236.herokuapp.com/following/${newFollowerName}`, {}, { withCredentials: true });\n    if (response.data.username == userData.username) {\n      setErrorMessage(\"\");  \n      setNewFollowerName('');\n      fetchFollowers();\n      fetchUserPosts();\n    } else {\n      setNewFollowerName('');\n      setErrorMessage(\"user not found.\");\n    }\n  } catch (error) {\n    setNewFollowerName('');\n    setErrorMessage(error.response.data.message);\n  };}\n\n  const handleUnfollow = async username => {\n    try {\n      const response = await axios.delete(`https://lily-social-app-7e0ca4e6d236.herokuapp.com/following/${username}`, { withCredentials: true });\n      if (response.data.username === userData.username) {\n         fetchFollowers();\n         fetchUserPosts();\n      }\n    } catch (_error) {}\n  };\n  \n\n  const handleSearch = (e) => {\n    setSearchQuery(e.target.value)\n  };\n\n  const handleComment = postId => {\n  };\n\n  const handleEditPost = postId => {\n  \n  };\n  const handleEditComment = (postId) => {\n  }\n\n  const handlePostSubmit = newPost => {\n    setUserPosts([newPost, ...userPosts]);\n  };\n\n  const handleStatusUpdate = newStatus => {\n\n  };\n\n  return (\n    <div>\n      <MainHeader navigate={navigate} userData={userData} />\n      <div className=\"main-content\">\n        <UserInfoGrid user={userData} onUpdateStatus={handleStatusUpdate} />\n        <PostGrid user={userData} onPostSubmit={handlePostSubmit} />\n      </div>\n      <div className=\"sidebar\">\n        <h2 className = \"follow-user-h2\">Followed Users</h2>\n        <ul className=\"follow-user-ul\">\n          {followedUsers.map(user => (\n            <li className='follow-user-li'key={user.id}>\n              <img className='follow-user-img' src={user.avatar} alt=\"Avatar\" />\n              <p>{user.username}</p>\n              <p>{user.headline}</p>\n\n              <button data-testid={`unfollow-${user.username}`} onClick={() => handleUnfollow(user.username)}>Unfollow</button>\n            </li>\n          ))}\n        </ul>\n        <input className='se'\n          type=\"text\"\n          data-testid='add-follower-name'\n          placeholder=\"Enter name\"\n          value={newFollowerName}\n          onChange={e => setNewFollowerName(e.target.value)}\n        />\n        <button data-testid='add-follower' onClick={handleAddFollower}>Add Follower</button>\n        {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n\n      </div>\n      <div className=\"search-bar\">\n        <input data-testid='search-test'\n          type=\"text\"\n          placeholder=\"Search by author or text...\"\n          value={searchQuery}\n          onChange={handleSearch}\n        />\n      </div>\n\n    <div data-testid='user-posts'>\n    {currentPosts.filter(post => {\n        return post.author.toLowerCase().includes(searchQuery.toLowerCase()) || post.text.toLowerCase().includes(searchQuery.toLowerCase())\n      }).map(post => (\n      <Posts key={post.pid} post={post} loggedInUser={userData.username} />\n    ))}\n  </div>\n  <Pagination\n    postsPerPage={postsPerPage}\n    totalPosts={userPosts.length}\n    paginate={paginate}\n  />\n   \n    </div>\n  );\n};\n\nexport default MainPage;\n\n","/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/pages/Profile.js",["236","237","238"],[],"import React, { useState, useEffect, useRef } from \"react\";\nimport ProfileHeader from '../components/ProfileHeader';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst ProfilePage = () => {\nconst navigate = useNavigate();\nconst location = useLocation();\nconst [avatarUrl, setAvatarUrl] = useState('');\n\nconst userData = location.state.userData;\nconst [image, setImage] = useState(null);\nconst fileInputRef = useRef();\n\nconst handleUpdateAvatar = () => {\n\n  \n  const formData = new FormData();\n  formData.append('image', image);\n  \n\n\n  axios.put('https://lily-social-app-7e0ca4e6d236.herokuapp.com/avatar', formData, { withCredentials: true })\n  .then(response => {\n    setAvatarUrl(response.data.avatar);\n    setImage(null);\n    fileInputRef.current.value = '';\n  }).catch(_error => {});\n};\n\nconst handleUpdateDisplayName = () => {\n  axios.put('https://lily-social-app-7e0ca4e6d236.herokuapp.com/displayname', { displayname: name }, { withCredentials: true })\n  .then(_response => {}).catch(_error => {});\n}\n\nconst handleUpdateEmail = () => {\n  axios.put('https://lily-social-app-7e0ca4e6d236.herokuapp.com/email', { email: email }, { withCredentials: true })\n  .then(_response => {}).catch(_error => {});\n}\n\nconst handleUpdatePhone = () => {\n  axios.put('https://lily-social-app-7e0ca4e6d236.herokuapp.com/phone', { phone: phone }, { withCredentials: true })\n  .then(_response => {}).catch(_error => {});\n}\n\nconst handleUpdateZip = () => {\n  axios.put('https://lily-social-app-7e0ca4e6d236.herokuapp.com/zipcode', { zipcode: zip }, { withCredentials: true })\n  .then(_response => {}).catch(_error => {});\n}\n\nconst handleUpdatePassword = () => {\n  axios.put('https://lily-social-app-7e0ca4e6d236.herokuapp.com/password', { password: password }, { withCredentials: true })\n  .then(_response => {}).catch(_error => {});\n}\n\nconst fetchAvatar = async () => {\n  try {\n    const response = await axios.get(`https://lily-social-app-7e0ca4e6d236.herokuapp.com/avatar/${userData.username}`, { withCredentials: true });\n    setAvatarUrl(response.data.avatar);\n  } catch (_error) {}\n};\n\nconst fetchDisplayName = async () => {\n  try {\n    const response = await axios.get(`https://lily-social-app-7e0ca4e6d236.herokuapp.com/displayname/${userData.username}`, { withCredentials: true });\n    setCurName(response.data.displayname);\n  } catch (_error) {}\n}\n\nconst fetchEmail = async () => {\n  try {\n    const response = await axios.get(`https://lily-social-app-7e0ca4e6d236.herokuapp.com/email/${userData.username}`, { withCredentials: true });\n    setCurEmail(response.data.email);\n  } catch (_error) {}\n}\n\nconst fetchPhone = async () => {\n  try {\n    const response = await axios.get(`https://lily-social-app-7e0ca4e6d236.herokuapp.com/phone/${userData.username}`, { withCredentials: true });\n    setCurPhone(response.data.phone);\n  } catch (_error) {}\n}\n\nconst fetchZip = async () => {\n  try {\n    const response = await axios.get(`https://lily-social-app-7e0ca4e6d236.herokuapp.com/zipcode/${userData.username}`, { withCredentials: true });\n    setCurZip(response.data.zipcode);\n  } catch (_error) {}\n}\n\n\nuseEffect(() => {\n  fetchAvatar();\n  fetchDisplayName();\n  fetchEmail();\n  fetchPhone();\n  fetchZip();\n\n}, [userData.username]); \n\n\n  const [curName, setCurName] = useState(userData.displayName);\n  const [curEmail, setCurEmail] = useState(userData.email);\n  const [curPhone, setCurPhone] = useState(userData.phone);\n  const [curZip, setCurZip] = useState(userData.address.zipcode);\n  const [curPassword, setCurPassword] = useState('*'.repeat(userData.address.street.length));\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [zip, setZip] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const [nameMessage, setNameMessage] = useState(\"\");\n  const [emailMessage, setEmailMessage] = useState(\"\");\n  const [phoneMessage, setPhoneMessage] = useState(\"\");\n  const [zipMessage, setZipMessage] = useState(\"\");\n  const [passwordMessage, setPasswordMessage] = useState(\"\");\n  const [confirmPasswordMessage, setConfirmPasswordMessage] = useState(\"\");\n\n  const validate = () => {\n    if (name !== \"\") {\n      if (name === curName) {\n        setNameMessage(\"Please provide a different value for updating your profile information.\");\n      } else {\n        setNameMessage(\"\");\n        setCurName(name);\n        handleUpdateDisplayName();\n      }\n    } else {\n        setNameMessage(\"\")\n    }\n    if (email !== \"\") {\n      const emailPattern = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/;\n      if (!emailPattern.test(email)) {\n        setEmailMessage(\"Please enter a valid email address.\");\n      } else if (email === curEmail) {\n        setEmailMessage(\"Please provide a different value for updating your email.\");\n      } else {\n        setEmailMessage(\"\");\n        setCurEmail(email);\n        handleUpdateEmail();\n      }\n    } else {\n        setEmailMessage(\"\")\n    }\n\n    if (phone !== \"\") {\n      const phonePattern = /^[0-9]{3}-[0-9]{3}-[0-9]{4}$/;\n      if (!phonePattern.test(phone)) {\n        setPhoneMessage(\"Please enter a valid phone number in 123-123-1234 format.\");\n      } else if (phone === curPhone) {\n        setPhoneMessage(\"Please provide a different value for updating your phone number.\");\n      } else {\n        setPhoneMessage(\"\");\n        setCurPhone(phone);\n        handleUpdatePhone();\n      }\n    } else {\n        setPhoneMessage(\"\")\n    }\n\n    if (zip !== \"\") {\n      const zipPattern = /^[0-9]{5}$/;\n      if (!zipPattern.test(zip)) {\n        setZipMessage(\"Please enter a valid 5-digit US zip code.\");\n      } else if (zip === curZip) {\n        setZipMessage(\"Please provide a different value for updating your zip code.\");\n      } else {\n        setZipMessage(\"\");\n        setCurZip(zip);\n        handleUpdateZip();\n      }\n    } else {\n        setZipMessage(\"\")\n    }\n\n    if (password !== \"\") {\n      if (password !== confirmPassword) {\n        setPasswordMessage(\"Password and confirmation do not match.\");\n      } else if (password === curPassword) {\n        setPasswordMessage(\"Please provide a different value for updating your password.\");\n      } else {\n        setPasswordMessage(\"\");\n        setCurPassword(password);\n        userData.address.street = password;\n        handleUpdatePassword();\n      }\n    } else {\n        setPasswordMessage(\"\");\n    }\n\n    setName(\"\");\n    setEmail(\"\");\n    setPhone(\"\");\n    setZip(\"\");\n    setPassword(\"\");\n    setConfirmPassword(\"\");\n\n  };\n\n  return (\n    <div className=\"container\">\n      <ProfileHeader navigate={navigate} userData={userData}/>\n      <div className=\"profile-picture-container\">\n        <img src={avatarUrl}></img>\n\n        <input className=\"post-button\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={(e) => setImage(e.target.files[0])}\n        ref={fileInputRef} \n      />\n        <button onClick={handleUpdateAvatar} className=\"post-button\">Update Profile Picture</button>\n\n        </div>\n      <table className=\"styled-table\" id=\"pf\">\n        <thead>\n          <tr className=\"table-key\">\n            <th>Key</th>\n            <th>Input</th>\n            <th>Value</th>\n            <th>Message</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td className=\"key\">Display Name</td>\n            <td><input type=\"text\" className=\"field\" value={name} onChange={(e) => setName(e.target.value)} /></td>\n            <td className=\"hc\" id=\"dis-name\">{curName}</td>\n            <td id=\"msg-name\">{nameMessage}</td>\n          </tr>\n          <tr>\n            <td className=\"key\">Email Address</td>\n            <td><input type=\"email\" className=\"field\" value={email} onChange={(e) => setEmail(e.target.value)} /></td>\n            <td className=\"hc\" id=\"dis-email\">{curEmail}</td>\n            <td id=\"msg-email\">{emailMessage}</td>\n          </tr>\n          <tr>\n            <td className=\"key\">Phone Number</td>\n            <td><input type=\"tel\" className=\"field\" value={phone} onChange={(e) => setPhone(e.target.value)} /></td>\n            <td className=\"hc\" id=\"dis-phone\">{curPhone}</td>\n            <td id=\"msg-phone\">{phoneMessage}</td>\n          </tr>\n          <tr>\n            <td className=\"key\">Zip Code</td>\n            <td><input type=\"text\" className=\"field\" value={zip} onChange={(e) => setZip(e.target.value)} /></td>\n            <td className=\"hc\" id=\"dis-zip\">{curZip}</td>\n            <td id=\"msg-zip\">{zipMessage}</td>\n          </tr>\n          <tr>\n            <td className=\"key\">Password</td>\n            <td><input type=\"password\" className=\"field\" value={password} onChange={(e) => setPassword(e.target.value)} /></td>\n            <td className=\"hc\" id=\"dis-password\">{\"*\".repeat(curPassword.length)}</td>\n            <td id=\"msg-password\">{passwordMessage}</td>\n          </tr>\n          <tr>\n            <td className=\"key\">Password Confirmation</td>\n            <td><input type=\"password\" className=\"field\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} /></td>\n            <td className=\"hc\" id=\"dis-confirm\">{\"*\".repeat(curPassword.length)}</td>\n            <td id=\"msg-confirm\">{confirmPasswordMessage}</td>\n          </tr>\n        </tbody>\n      </table>\n      <div className=\"btn-container\">\n        <button onClick={validate}>Update</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n","/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/pages/Landing.js",[],[],"/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/components/UserInfoGrid.js",["239","240"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst UserInfoGrid = ({ user, onUpdateStatus }) => {\n\n  const [status, setStatus] = useState(\"\");\n\n  const [newStatus, setNewStatus] = useState('');\n\n    const [avatarUrl, setAvatarUrl] = useState('');\n    const [displayName, setDisplayName] = useState('');\n\n  const fetchHeadline = async () => {\n    try {\n      const response = await axios.get(`https://lily-social-app-7e0ca4e6d236.herokuapp.com/headline/${user.username}`, { withCredentials: true });\n      setStatus(response.data.headline);\n    } catch (_error) {}\n  };\n\n  const fetchDisplayName = async () => {\n    try {\n      const response = await axios.get(`https://lily-social-app-7e0ca4e6d236.herokuapp.com/displayname/${user.username}`, { withCredentials: true });\n      setDisplayName(response.data.displayname);\n    } catch (_error) {}\n  }\n\n  const fetchAvatar = async () => {\n    try {\n      const response = await axios.get(`https://lily-social-app-7e0ca4e6d236.herokuapp.com/avatar/${user.username}`, { withCredentials: true });\n      setAvatarUrl(response.data.avatar);\n    } catch (_error) {}};\n\n  useEffect(() => {\n    fetchHeadline();\n    fetchAvatar();\n    fetchDisplayName();\n  }, [user.username]); \n\n  const handleStatusUpdate = () => {\n    if (newStatus.trim() !== '') {\n      onUpdateStatus(newStatus);\n      setStatus(newStatus);\n      setNewStatus('');\n      axios.put(`https://lily-social-app-7e0ca4e6d236.herokuapp.com/headline`, { headline: newStatus }, { withCredentials: true })\n      .then(_response => {})\n    }\n\n  };\n\n  return (\n    <div className=\"user-info-grid\">\n      <div>\n        <h3>{displayName}</h3>\n        <img src={avatarUrl}></img>\n      </div>\n      <p className=\"status\">{status}</p>\n      <div>\n        <input\n          type=\"text\"\n          value={newStatus}\n          onChange={(e) => setNewStatus(e.target.value)}\n          className=\"post-input\"\n        />\n        <button onClick={handleStatusUpdate} className=\"post-button\">\n          Update Status\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default UserInfoGrid;\n\n","/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/components/PostGrid.js",["241"],[],"/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/components/ProfileHeader.js",["242"],[],"/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/components/RegistrationForm.js",[],[],"/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/components/MainHeader.js",[],[],"/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/components/LoginForm.js",["243"],[],"import React, { useState, useEffect } from 'react';\nimport userDataTest from '../users.json'\nimport axios from 'axios';\n\nconst LoginForm = ({ navigate }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [users, setUsers] = useState(userDataTest);\n  const [isLoggedIn, setIsLoggedIn] = useState(false); \n\n \n\n  const validate = (event) => {\n    if (users.length === 0) {\n      setUsers(userDataTest)\n    }\n    event.preventDefault();\n    setErrorMessage('');\n\n    const backendUserData = {\n      username: username,\n      password: password\n    }\n    axios.post('https://lily-social-app-7e0ca4e6d236.herokuapp.com/login', backendUserData, { withCredentials: true })\n    .then(response => {\n      if (response.data.result === 'success') {\n        setIsLoggedIn(true);\n        setUsername('');\n        setPassword('');\n        const username = response.data.username; \n        return axios.get(`https://lily-social-app-7e0ca4e6d236.herokuapp.com/profile/${username}`, { withCredentials: true });\n      } else {\n        setIsLoggedIn(false);\n        setErrorMessage('Invalid username or password!');\n        return Promise.reject('Login failed');\n      }\n    })\n    .then(profileResponse => {\n      const userProfile = profileResponse.data;\n      const userData = {\n        id: userProfile.username,\n        username: userProfile.username,\n        displayName: userProfile.displayname,\n        email: userProfile.email,\n        phone: userProfile.phone,\n        company: { catchPhrase: userProfile.headline },\n        address: { zipcode: userProfile.zipcode, street: password }\n      }\n      navigate('/main', { state: { userData: userData } });\n    })\n    .catch(error => {\n      if (error !== 'Login failed') {\n        setErrorMessage(error.response?.data?.message || 'Error during profile fetch');\n      }\n    });\n  };\n\n  return (\n    <div className=\"login-form\" >\n      <h2>User Login Form</h2>\n      <form id=\"login\" data-testid=\"login-form-1\" onSubmit={validate}>\n        <p>Username: <input type=\"text\" autoComplete=\"off\" name=\"account\" data-testid=\"Username\" required onChange={(e) => setUsername(e.target.value)} /></p>\n        <p>Password: <input type=\"password\" autoComplete=\"off\" name=\"password\" data-testid=\"Password\" required onChange={(e) => setPassword(e.target.value)} /></p>\n        <div className=\"button-container\">\n          <input type=\"submit\" value=\"Login\" data-testid=\"login-button\"/>\n        </div>\n      </form>\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n      {isLoggedIn && <p>Welcome, User!</p>}\n    </div>\n  );\n};\n\nexport default LoginForm;\n","/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/components/Posts.js",["244","245"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nconst Posts = ({ post, loggedInUser}) => {\n  const [showComments, setShowComments] = useState(true); \n\n  const [comments, setComments] = useState([]); \n  const [showInput, setShowInput] = useState(false);\n  const [currentAction, setCurrentAction] = useState('');\n  const [inputMessage, setInputMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [postContent, setPostContent] = useState(post.text);\n  const [selectedCommentId, setSelectedCommentId] = useState(null);\n  const [refreshComments, setRefreshComments] = useState(false);\n\n  const selectCommentForEditing = (commentId) => {\n    setCurrentAction('editComment');\n    setSelectedCommentId(commentId);\n    toggleInputBox();\n  };\n  \n  const toggleComments = () => {\n    setShowComments(!showComments);\n    setShowInput(false); \n  };\n  const toggleInputBox = () => {\n    setShowInput(!showInput);\n    setErrorMessage(''); \n  };\n  const formatDate = (isoString) => {\n    const date = new Date(isoString);\n    return date.toLocaleString(); \n  };\n  const fetchComments = async () => {\n    try {\n      const response = await axios.get(`https://lily-social-app-7e0ca4e6d236.herokuapp.com/articles/${post.pid}`, { withCredentials: true });\n      const comments = response.data.articles[0].comments;\n      setComments(comments);\n    } catch (_error) {}\n  }\n  const onComment = (pid) => {\n    setCurrentAction('leaveComment');\n    toggleInputBox();\n\n\n      }\n  const onEditPost = (pid) => {\n    setCurrentAction('editPost');\n    toggleInputBox();\n\n    \n\n  }\n  const onEditComment = (pid) => {\n    setCurrentAction('editComment');\n    toggleInputBox();\n  }\n    useEffect(() => {\n    fetchComments();\n  }, [post.pid, refreshComments]);\n  const handleSubmit = async () => {\n    toggleInputBox(); \n  \n    switch (currentAction) {\n      case 'leaveComment':\n        axios.put(`https://lily-social-app-7e0ca4e6d236.herokuapp.com/articles/${post.pid}`, { text: inputMessage, commentId: -1 }, { withCredentials: true })\n        .then(response => {\n          if (response.data.articles.length >0) {\n            fetchComments();\n          } \n        }).catch(_error => {} ); \n        setRefreshComments(prev => !prev); \n        break;\n      case 'editPost':\n        axios.put(`https://lily-social-app-7e0ca4e6d236.herokuapp.com/articles/${post.pid}`, { text: inputMessage }, { withCredentials: true })\n        .then(response => {\n          const updatedPost = response.data.articles[0];\n          setPostContent(updatedPost.text); \n        })\n        .catch(error => {\n          if (error.response && error.response.status === 403) {\n            setErrorMessage('You are not authorized to edit this post.');\n          }\n        });\n\n        break;\n      case 'editComment':\n        axios.put(`https://lily-social-app-7e0ca4e6d236.herokuapp.com/articles/${post.pid}`, { text: inputMessage, commentId: selectedCommentId }, { withCredentials: true })\n        .then(response => {\n          const updatedPost = response.data.articles[0];\n          const updatedComments = updatedPost.comments;\n          setComments(updatedComments);\n        })\n        .catch(_error => {});\n        break;\n      default:\n        break;\n    }\n  \n    setCurrentAction('');\n  };\n  \n  return (\n    <div className=\"post-container\">\n      <div className=\"post-author\">Author: {post.author}</div>\n      <div className=\"post-timestamp\">Posted on: {formatDate(post.date)}</div>\n      <div className=\"post-body\">{postContent}</div>\n      <div className=\"post-image\">\n        {post.image && <img src={post.image} alt=\"Post\"/>}\n      </div>\n      {showComments && (\n        <div className=\"comments-section\">\n          <h4>Comments</h4>\n          <ul>\n            {comments && comments.map((comment) => (\n              <li key={comment.id}>\n                {comment.author}: {comment.message}\n                {comment.author === loggedInUser && (\n                  <button className=\"edit-comment-button\" onClick={() => selectCommentForEditing(comment.id)}>Edit</button>\n                )}</li>\n            ))}\n          </ul>\n\n        </div>\n      )}\n      <div className=\"post-buttons\">\n        <button className=\"post-button\" onClick={onComment}>Leave a Comment</button>\n        <button className=\"post-button\" onClick={onEditPost}>Edit Post</button>\n        <button className=\"post-button\" onClick={toggleComments}>\n          {showComments ? \"Hide Comments\" : \"Show Comments\"}\n        </button>\n      </div>\n      {showInput && (\n        <div className=\"input-container\">\n          <textarea className=\"input-box\"  onChange={(e) => setInputMessage(e.target.value)}/>\n          <button className=\"submit-button\" onClick={handleSubmit}>Submit</button>\n        </div>\n      )}\n            {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n\n    </div>\n  );\n};\n\nexport default Posts;\n\n\n","/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/components/Pagination.js",[],[],{"ruleId":"246","severity":1,"message":"247","line":9,"column":24,"nodeType":"248","messageId":"249","endLine":9,"endColumn":41},{"ruleId":"246","severity":1,"message":"250","line":32,"column":34,"nodeType":"248","messageId":"249","endLine":32,"endColumn":59},{"ruleId":"246","severity":1,"message":"251","line":32,"column":15,"nodeType":"248","messageId":"249","endLine":32,"endColumn":27},{"ruleId":"252","severity":1,"message":"253","line":80,"column":5,"nodeType":"254","endLine":80,"endColumn":18,"suggestions":"255"},{"ruleId":"256","severity":1,"message":"257","line":90,"column":39,"nodeType":"258","messageId":"259","endLine":90,"endColumn":41},{"ruleId":"246","severity":1,"message":"260","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":25},{"ruleId":"261","severity":1,"message":"262","line":21,"column":9,"nodeType":"263","endLine":21,"endColumn":237},{"ruleId":"246","severity":1,"message":"251","line":32,"column":15,"nodeType":"248","messageId":"249","endLine":32,"endColumn":27},{"ruleId":"252","severity":1,"message":"253","line":80,"column":5,"nodeType":"254","endLine":80,"endColumn":18,"suggestions":"264"},{"ruleId":"256","severity":1,"message":"257","line":90,"column":39,"nodeType":"258","messageId":"259","endLine":90,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":9,"column":24,"nodeType":"248","messageId":"249","endLine":9,"endColumn":41},{"ruleId":"246","severity":1,"message":"250","line":32,"column":34,"nodeType":"248","messageId":"249","endLine":32,"endColumn":59},{"ruleId":"246","severity":1,"message":"260","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":25},{"ruleId":"261","severity":1,"message":"262","line":21,"column":9,"nodeType":"263","endLine":21,"endColumn":237},{"ruleId":"265","replacedBy":"266"},{"ruleId":"252","severity":1,"message":"267","line":25,"column":6,"nodeType":"254","endLine":25,"endColumn":30,"suggestions":"268"},{"ruleId":"252","severity":1,"message":"269","line":31,"column":4,"nodeType":"254","endLine":31,"endColumn":23,"suggestions":"270"},{"ruleId":"256","severity":1,"message":"271","line":71,"column":23,"nodeType":"258","messageId":"259","endLine":71,"endColumn":25},{"ruleId":"256","severity":1,"message":"271","line":78,"column":32,"nodeType":"258","messageId":"259","endLine":78,"endColumn":34},{"ruleId":"246","severity":1,"message":"272","line":107,"column":9,"nodeType":"248","messageId":"249","endLine":107,"endColumn":22},{"ruleId":"246","severity":1,"message":"273","line":110,"column":9,"nodeType":"248","messageId":"249","endLine":110,"endColumn":23},{"ruleId":"246","severity":1,"message":"274","line":113,"column":9,"nodeType":"248","messageId":"249","endLine":113,"endColumn":26},{"ruleId":"252","severity":1,"message":"275","line":99,"column":4,"nodeType":"254","endLine":99,"endColumn":23,"suggestions":"276"},{"ruleId":"246","severity":1,"message":"250","line":120,"column":34,"nodeType":"248","messageId":"249","endLine":120,"endColumn":59},{"ruleId":"261","severity":1,"message":"262","line":207,"column":9,"nodeType":"263","endLine":207,"endColumn":30},{"ruleId":"252","severity":1,"message":"277","line":37,"column":6,"nodeType":"254","endLine":37,"endColumn":21,"suggestions":"278"},{"ruleId":"261","severity":1,"message":"262","line":54,"column":9,"nodeType":"263","endLine":54,"endColumn":30},{"ruleId":"246","severity":1,"message":"279","line":10,"column":11,"nodeType":"248","messageId":"249","endLine":10,"endColumn":18},{"ruleId":"246","severity":1,"message":"260","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":25},{"ruleId":"246","severity":1,"message":"280","line":1,"column":27,"nodeType":"248","messageId":"249","endLine":1,"endColumn":36},{"ruleId":"246","severity":1,"message":"281","line":53,"column":9,"nodeType":"248","messageId":"249","endLine":53,"endColumn":22},{"ruleId":"252","severity":1,"message":"282","line":59,"column":6,"nodeType":"254","endLine":59,"endColumn":33,"suggestions":"283"},"no-unused-vars","'setProfilePicture' is assigned a value but never used.","Identifier","unusedVar","'setConfirmPasswordMessage' is assigned a value but never used.","'loggedInUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userData'. Either include it or remove the dependency array.","ArrayExpression",["284"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["285"],"no-new-object",["286"],"React Hook useEffect has a missing dependency: 'postsPerPage'. Either include it or remove the dependency array.",["287"],"React Hook useEffect has a missing dependency: 'fetchFollowers'. Either include it or remove the dependency array.",["288"],"Expected '===' and instead saw '=='.","'handleComment' is assigned a value but never used.","'handleEditPost' is assigned a value but never used.","'handleEditComment' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchAvatar', 'fetchDisplayName', 'fetchEmail', 'fetchPhone', and 'fetchZip'. Either include them or remove the dependency array.",["289"],"React Hook useEffect has missing dependencies: 'fetchAvatar', 'fetchDisplayName', and 'fetchHeadline'. Either include them or remove the dependency array.",["290"],"'newPost' is assigned a value but never used.","'useEffect' is defined but never used.","'onEditComment' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchComments'. Either include it or remove the dependency array.",["291"],{"desc":"292","fix":"293"},{"desc":"292","fix":"294"},"no-object-constructor",{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},"Update the dependencies array to be: [userData, userData.id]",{"range":"305","text":"306"},{"range":"307","text":"306"},"Update the dependencies array to be: [currentPage, postsPerPage, userPosts]",{"range":"308","text":"309"},"Update the dependencies array to be: [fetchFollowers, userData.username]",{"range":"310","text":"311"},"Update the dependencies array to be: [fetchAvatar, fetchDisplayName, fetchEmail, fetchPhone, fetchZip, userData.username]",{"range":"312","text":"313"},"Update the dependencies array to be: [fetchAvatar, fetchDisplayName, fetchHeadline, user.username]",{"range":"314","text":"315"},"Update the dependencies array to be: [fetchComments, post.pid, refreshComments]",{"range":"316","text":"317"},[3553,3566],"[userData, userData.id]",[3553,3566],[1165,1189],"[currentPage, postsPerPage, userPosts]",[1258,1277],"[fetchFollowers, userData.username]",[3245,3264],"[fetchAvatar, fetchDisplayName, fetchEmail, fetchPhone, fetchZip, userData.username]",[1233,1248],"[fetchAvatar, fetchDisplayName, fetchHeadline, user.username]",[1766,1793],"[fetchComments, post.pid, refreshComments]"]