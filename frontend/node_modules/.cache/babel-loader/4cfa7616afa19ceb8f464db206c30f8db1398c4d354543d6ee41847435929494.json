{"ast":null,"code":"var _jsxFileName = \"/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/pages/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport MainHeader from '../components/MainHeader';\nimport Posts from '../components/Posts';\nimport UserInfoGrid from '../components/UserInfoGrid';\nimport PostGrid from '../components/PostGrid';\nimport userPostsTest from '../posts.json';\nimport usersInfo from '../users.json';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [userPosts, setUserPosts] = useState([]);\n  const navigate = useNavigate();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [newFollowerName, setNewFollowerName] = useState('');\n  const [followedUsers, setFollowedUsers] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const location = useLocation();\n  const userData = location.state.userData;\n  const defaultPostImage = 'https://media.istockphoto.com/id/1420755455/photo/grunge-dirty-background-overlay.webp?b=1&s=170667a&w=0&k=20&c=7wfOkV1I0RJVAsuZlCzMD8zRenjlWo1hUYCAIsGBckw=';\n  useEffect(() => {\n    // const fetchFollowers = async () => {\n    //     // const response = await fetch('https://jsonplaceholder.typicode.com/users');\n    //     // const data = await response.json();\n    //     const data = usersInfo;\n\n    //     if (!Number.isInteger(userData.id)) {\n    //       setFollowedUsers([])\n    //       return ([])\n    //     }\n    //     const loggedInUser = data.find(user => user.id === userData.id);\n    //     const followingIds = Array.from({ length: 3 }, (_, index) => (userData.id + index + 1) % 10 || 10);\n    //     const followedUsersList = data.filter(user => followingIds.includes(user.id) && user.id !== userData.id);\n\n    //     setFollowedUsers(followedUsersList);\n    //     return followedUsersList;\n    // };\n    const fetchFollowers = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/following/${userData.username}`, {\n          withCredentials: true\n        });\n        setFollowedUsers(response.data.following);\n        console.log(followedUsers);\n        // Fetch each user's profile and collect them in an array\n        const profiles = await Promise.all(followedUsers.map(username => axios.get(`http://localhost:3000/profile/${username}`).then(res => res.data)));\n\n        // Set the fetched profiles in state\n        setFollowedUsers(profiles);\n        console.log(followedUsers);\n        return followedUsers;\n      } catch (error) {\n        console.error('Error fetching followers:', error);\n      }\n    };\n    const fetchUserPosts = async followedUsers => {\n      // const responseForLoggedUser = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${userData.id}`);\n      // const postsForLoggedUser = await responseForLoggedUser.json();\n      const postsForLoggedUser = userPostsTest.filter(post => post.userId === userData.id);\n      // const postsPromises = followedUsers.map(user => \n      //     fetch(`https://jsonplaceholder.typicode.com/posts?userId=${user.id}`).then(res => res.json())\n      // );\n      const postsPromises = followedUsers.map(user => userPostsTest.filter(post => post.userId === user.id));\n      const postsResults = await Promise.all(postsPromises);\n      const flattenedFollowedUsersPosts = [].concat(...postsResults).map(post => {\n        const userForPost = followedUsers.find(u => u.id === post.userId);\n        return {\n          ...post,\n          user: userForPost,\n          timestamp: new Date(Date.now() - Math.floor(Math.random() * 10 * 365 * 24 * 60 * 60 * 1000)).toLocaleString(),\n          image: defaultPostImage\n        };\n      });\n      const userPostsList = postsForLoggedUser.map(post => ({\n        ...post,\n        user: userData,\n        timestamp: new Date(Date.now() - Math.floor(Math.random() * 10 * 365 * 24 * 60 * 60 * 1000)).toLocaleString(),\n        image: defaultPostImage\n      }));\n      const mergedPosts = [...userPostsList, ...flattenedFollowedUsersPosts];\n      const sortedPosts = mergedPosts.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n      setUserPosts(sortedPosts);\n    };\n    fetchFollowers().then(followedUsers => fetchUserPosts(followedUsers));\n    // fetchFollowers().then(\n    // fetchUserPosts(followedUsers)\n  }, [userData.id]);\n  const handleAddFollower = async () => {\n    console.log(\"get in\");\n    try {\n      console.log(\"dfdfd\");\n      const response = await axios.put(`http://localhost:3000/following/${newFollowerName}`, {}, {\n        withCredentials: true\n      });\n      console.log('Response:', response);\n      if (response.data.username == userData.username) {\n        setErrorMessage(\"\");\n      } else {\n        console.log('Follower add failed');\n        setErrorMessage(\"user not found.\");\n      }\n    } catch (error) {\n      if (error.data.message == 'User or follower not found') {\n        setErrorMessage(\"user not found.\");\n      } else {\n        setErrorMessage(\"'User already followed'\");\n      }\n    }\n    ;\n  };\n  // const handleAddFollower = async () => {\n  //   console.log(\"get in\")\n  //   try {\n  //     console.log(\"dfdfd\")\n  //     const response = await axios.put(`http://localhost:3000/following/${newFollowerName}`, {}, { withCredentials: true });\n  //     console.log(\"sssss\",response)\n  //     if (response.data.username == userData.username) {\n  //       console.log('Follower added');\n  //     } else {\n  //       console.log('Follower add failed');\n  //       setErrorMessage(\"user not found.\");\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //   };\n  //   // // const response = await fetch('https://jsonplaceholder.typicode.com/users');\n  //   // // const users = await response.json();\n  //   // const users = usersInfo;\n\n  //   // const newFollower = users.find(user => user.username.toLowerCase() === newFollowerName.toLowerCase());\n\n  //   // if (newFollower && newFollower.id != userData.id) {\n  //   //   setFollowedUsers([...followedUsers, newFollower]);\n  //   //   // const responseForNewFollower = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${newFollower.id}`);\n  //   //   // const postsForNewFollower = await responseForNewFollower.json();\n  //   //   const postsForNewFollower = userPostsTest.filter(post => post.userId === newFollower.id)\n\n  //   //   const postsWithTimestampAndImage = postsForNewFollower.map(post => ({\n  //   //     ...post,\n  //   //     user: newFollower,\n  //   //     timestamp: new Date(Date.now() - Math.floor(Math.random() * 10 * 365 * 24 * 60 * 60 * 1000)).toLocaleString(),\n  //   //     image: defaultPostImage\n  //   //   }));\n\n  //   //   const updatedPosts = [...userPosts, ...postsWithTimestampAndImage];\n  //   //   const sortedPosts = updatedPosts.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n  //   //   setUserPosts(sortedPosts);\n  //   //   setErrorMessage(''); \n  //   // } else {\n  //   //   setErrorMessage('User not found or invalid.');\n  //   // }\n\n  //   // setNewFollowerName('');\n  // };\n\n  const handleUnfollow = userId => {\n    const updatedFollowedUsers = followedUsers.filter(user => user.id !== userId);\n    setFollowedUsers(updatedFollowedUsers);\n    const updatedPosts = userPosts.filter(post => post.user.id !== userId);\n    const sortedPosts = updatedPosts.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n    setUserPosts(sortedPosts);\n  };\n  const handleSearch = e => {\n    setSearchQuery(e.target.value);\n  };\n  const handleComment = postId => {};\n  const handleEdit = postId => {};\n  const handlePostSubmit = newPost => {\n    setUserPosts([newPost, ...userPosts]);\n  };\n  const handleStatusUpdate = newStatus => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      navigate: navigate,\n      userData: userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(UserInfoGrid, {\n        user: userData,\n        onUpdateStatus: handleStatusUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostGrid, {\n        user: userData,\n        onPostSubmit: handlePostSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"follow-user-h2\",\n        children: \"Followed Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"follow-user-ul\",\n        children: followedUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"follow-user-li\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"follow-user-img\",\n            src: \"https://media.istockphoto.com/id/1403045742/photo/happy-mixed-race-father-and-son-brushing-their-teeth-together-in-a-bathroom-at-home-single.webp?b=1&s=170667a&w=0&k=20&c=siRQqYPxmZsWtoedb7eoQOzRvQl1GVg_ccCAOsICTCw=\",\n            alt: \"Avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: user.company.catchPhrase\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            \"data-testid\": `unfollow-${user.id}`,\n            onClick: () => handleUnfollow(user.id),\n            children: \"Unfollow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"se\",\n        type: \"text\",\n        \"data-testid\": \"add-follower-name\",\n        placeholder: \"Enter name\",\n        value: newFollowerName,\n        onChange: e => setNewFollowerName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"add-follower\",\n        onClick: handleAddFollower,\n        children: \"Add Follower\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-testid\": \"search-test\",\n        type: \"text\",\n        placeholder: \"Search by author or text...\",\n        value: searchQuery,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"user-posts\",\n      children: userPosts.filter(post => {\n        return post.title.toLowerCase().includes(searchQuery.toLowerCase()) || post.body.toLowerCase().includes(searchQuery.toLowerCase()) || post.user.username.toLowerCase().includes(searchQuery.toLowerCase());\n      }).map(post => /*#__PURE__*/_jsxDEV(Posts, {\n        post: post,\n        onComment: handleComment,\n        onEdit: handleEdit\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"Hmoy8UbdMOHBiZPd8LyJawX44pM=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","MainHeader","Posts","UserInfoGrid","PostGrid","userPostsTest","usersInfo","axios","jsxDEV","_jsxDEV","MainPage","_s","userPosts","setUserPosts","navigate","searchQuery","setSearchQuery","newFollowerName","setNewFollowerName","followedUsers","setFollowedUsers","errorMessage","setErrorMessage","location","userData","state","defaultPostImage","fetchFollowers","response","get","username","withCredentials","data","following","console","log","profiles","Promise","all","map","then","res","error","fetchUserPosts","postsForLoggedUser","filter","post","userId","id","postsPromises","user","postsResults","flattenedFollowedUsersPosts","concat","userForPost","find","u","timestamp","Date","now","Math","floor","random","toLocaleString","image","userPostsList","mergedPosts","sortedPosts","sort","a","b","handleAddFollower","put","message","handleUnfollow","updatedFollowedUsers","updatedPosts","handleSearch","e","target","value","handleComment","postId","handleEdit","handlePostSubmit","newPost","handleStatusUpdate","newStatus","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onUpdateStatus","onPostSubmit","src","alt","company","catchPhrase","onClick","type","placeholder","onChange","style","color","title","toLowerCase","includes","body","onComment","onEdit","_c","$RefreshReg$"],"sources":["/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/pages/Main.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport MainHeader from '../components/MainHeader';\nimport Posts from '../components/Posts';\nimport UserInfoGrid from '../components/UserInfoGrid';\nimport PostGrid from '../components/PostGrid';\nimport userPostsTest from '../posts.json';\nimport usersInfo from '../users.json'\nimport axios from 'axios';\n\nconst MainPage = () => {\n  const [userPosts, setUserPosts] = useState([]);\n  const navigate = useNavigate();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [newFollowerName, setNewFollowerName] = useState('');\n  const [followedUsers, setFollowedUsers] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const location = useLocation();\n  const userData = location.state.userData;\n  const defaultPostImage = 'https://media.istockphoto.com/id/1420755455/photo/grunge-dirty-background-overlay.webp?b=1&s=170667a&w=0&k=20&c=7wfOkV1I0RJVAsuZlCzMD8zRenjlWo1hUYCAIsGBckw=';\n  useEffect(() => {\n    // const fetchFollowers = async () => {\n    //     // const response = await fetch('https://jsonplaceholder.typicode.com/users');\n    //     // const data = await response.json();\n    //     const data = usersInfo;\n\n    //     if (!Number.isInteger(userData.id)) {\n    //       setFollowedUsers([])\n    //       return ([])\n    //     }\n    //     const loggedInUser = data.find(user => user.id === userData.id);\n    //     const followingIds = Array.from({ length: 3 }, (_, index) => (userData.id + index + 1) % 10 || 10);\n    //     const followedUsersList = data.filter(user => followingIds.includes(user.id) && user.id !== userData.id);\n\n    //     setFollowedUsers(followedUsersList);\n    //     return followedUsersList;\n    // };\n    const fetchFollowers = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/following/${userData.username}`, { withCredentials: true });\n        setFollowedUsers(response.data.following);\n        console.log(followedUsers);\n        // Fetch each user's profile and collect them in an array\n        const profiles = await Promise.all(\n          followedUsers.map(username => \n              axios.get(`http://localhost:3000/profile/${username}`).then(res => res.data)\n          )\n      );\n\n      // Set the fetched profiles in state\n      setFollowedUsers(profiles);\n      console.log(followedUsers)\n      return followedUsers;\n      } catch (error) {\n        console.error('Error fetching followers:', error);\n      }\n    };\n\n    const fetchUserPosts = async (followedUsers) => {\n        // const responseForLoggedUser = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${userData.id}`);\n        // const postsForLoggedUser = await responseForLoggedUser.json();\n        const postsForLoggedUser = userPostsTest.filter(post => post.userId === userData.id);\n        // const postsPromises = followedUsers.map(user => \n        //     fetch(`https://jsonplaceholder.typicode.com/posts?userId=${user.id}`).then(res => res.json())\n        // );\n        const postsPromises = followedUsers.map(user => \n          userPostsTest.filter(post => post.userId === user.id)\n        );\n        \n        const postsResults = await Promise.all(postsPromises);\n\n        const flattenedFollowedUsersPosts = [].concat(...postsResults).map(post => {\n            const userForPost = followedUsers.find(u => u.id === post.userId);\n            return {\n                ...post,\n                user: userForPost,\n                timestamp: new Date(Date.now() - Math.floor(Math.random() * 10 * 365 * 24 * 60 * 60 * 1000)).toLocaleString(),\n                image: defaultPostImage\n            };\n        });\n\n        const userPostsList = postsForLoggedUser.map(post => ({\n            ...post,\n            user: userData,\n            timestamp: new Date(Date.now() - Math.floor(Math.random() * 10 * 365 * 24 * 60 * 60 * 1000)).toLocaleString(),\n            image: defaultPostImage\n        }));\n\n        const mergedPosts = [...userPostsList, ...flattenedFollowedUsersPosts];\n\n        const sortedPosts = mergedPosts.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n        setUserPosts(sortedPosts);\n    };\n    fetchFollowers().then(\n      followedUsers => fetchUserPosts(followedUsers));\n    // fetchFollowers().then(\n    // fetchUserPosts(followedUsers)\n\n }, [userData.id]);\n\n const handleAddFollower = async () => {\n  console.log(\"get in\")\n  try {\n    console.log(\"dfdfd\")\n    const response = await axios.put(`http://localhost:3000/following/${newFollowerName}`, {}, { withCredentials: true });\n    console.log('Response:', response);\n    if (response.data.username == userData.username) {\n      setErrorMessage(\"\");  \n    } else {\n      console.log('Follower add failed');\n      setErrorMessage(\"user not found.\");\n    }\n  } catch (error) {\n    if(error.data.message == 'User or follower not found' ){\n      setErrorMessage(\"user not found.\");  \n    } else {\n      setErrorMessage(\"'User already followed'\")\n    }\n  };}\n  // const handleAddFollower = async () => {\n  //   console.log(\"get in\")\n  //   try {\n  //     console.log(\"dfdfd\")\n  //     const response = await axios.put(`http://localhost:3000/following/${newFollowerName}`, {}, { withCredentials: true });\n  //     console.log(\"sssss\",response)\n  //     if (response.data.username == userData.username) {\n  //       console.log('Follower added');\n  //     } else {\n  //       console.log('Follower add failed');\n  //       setErrorMessage(\"user not found.\");\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //   };\n  //   // // const response = await fetch('https://jsonplaceholder.typicode.com/users');\n  //   // // const users = await response.json();\n  //   // const users = usersInfo;\n\n  //   // const newFollower = users.find(user => user.username.toLowerCase() === newFollowerName.toLowerCase());\n  \n  //   // if (newFollower && newFollower.id != userData.id) {\n  //   //   setFollowedUsers([...followedUsers, newFollower]);\n  //   //   // const responseForNewFollower = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${newFollower.id}`);\n  //   //   // const postsForNewFollower = await responseForNewFollower.json();\n  //   //   const postsForNewFollower = userPostsTest.filter(post => post.userId === newFollower.id)\n\n\n  //   //   const postsWithTimestampAndImage = postsForNewFollower.map(post => ({\n  //   //     ...post,\n  //   //     user: newFollower,\n  //   //     timestamp: new Date(Date.now() - Math.floor(Math.random() * 10 * 365 * 24 * 60 * 60 * 1000)).toLocaleString(),\n  //   //     image: defaultPostImage\n  //   //   }));\n      \n  //   //   const updatedPosts = [...userPosts, ...postsWithTimestampAndImage];\n  //   //   const sortedPosts = updatedPosts.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n  //   //   setUserPosts(sortedPosts);\n  //   //   setErrorMessage(''); \n  //   // } else {\n  //   //   setErrorMessage('User not found or invalid.');\n  //   // }\n  \n  //   // setNewFollowerName('');\n  // };\n  \n\n  const handleUnfollow = userId => {\n    const updatedFollowedUsers = followedUsers.filter(user => user.id !== userId);\n    setFollowedUsers(updatedFollowedUsers);\n    const updatedPosts = userPosts.filter(post => post.user.id !== userId);\n    const sortedPosts = updatedPosts.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n    setUserPosts(sortedPosts);\n  };\n\n  const handleSearch = (e) => {\n    setSearchQuery(e.target.value)\n    \n    \n  };\n\n  const handleComment = postId => {\n  };\n\n  const handleEdit = postId => {\n  \n  };\n\n  const handlePostSubmit = newPost => {\n    setUserPosts([newPost, ...userPosts]);\n  };\n\n  const handleStatusUpdate = newStatus => {\n\n  };\n\n  return (\n    <div>\n      <MainHeader navigate={navigate} userData={userData} />\n      <div className=\"main-content\">\n        <UserInfoGrid user={userData} onUpdateStatus={handleStatusUpdate} />\n        <PostGrid user={userData} onPostSubmit={handlePostSubmit} />\n      </div>\n      <div className=\"sidebar\">\n        <h2 className = \"follow-user-h2\">Followed Users</h2>\n        <ul className=\"follow-user-ul\">\n          {followedUsers.map(user => (\n            <li className='follow-user-li'key={user.id}>\n              <img className='follow-user-img' src=\"https://media.istockphoto.com/id/1403045742/photo/happy-mixed-race-father-and-son-brushing-their-teeth-together-in-a-bathroom-at-home-single.webp?b=1&s=170667a&w=0&k=20&c=siRQqYPxmZsWtoedb7eoQOzRvQl1GVg_ccCAOsICTCw=\" alt=\"Avatar\" />\n              <p>{user.username}</p>\n              <p>{user.company.catchPhrase}</p>\n\n              <button data-testid={`unfollow-${user.id}`} onClick={() => handleUnfollow(user.id)}>Unfollow</button>\n            </li>\n          ))}\n        </ul>\n        <input className='se'\n          type=\"text\"\n          data-testid='add-follower-name'\n          placeholder=\"Enter name\"\n          value={newFollowerName}\n          onChange={e => setNewFollowerName(e.target.value)}\n        />\n        <button data-testid='add-follower' onClick={handleAddFollower}>Add Follower</button>\n        {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n\n      </div>\n      <div className=\"search-bar\">\n        <input data-testid='search-test'\n          type=\"text\"\n          placeholder=\"Search by author or text...\"\n          value={searchQuery}\n          onChange={handleSearch}\n        />\n      </div>\n      <div data-testid='user-posts'>\n      {userPosts.filter(post => {\n        return post.title.toLowerCase().includes(searchQuery.toLowerCase()) || post.body.toLowerCase().includes(searchQuery.toLowerCase()) || post.user.username.toLowerCase().includes(searchQuery.toLowerCase()) ;\n      }).map(post => (\n        <Posts\n          key={post.id}\n          post={post}\n          onComment={handleComment}\n          onEdit={handleEdit}\n        />\n      ))}\n    </div>\n    </div>\n  );\n};\n\nexport default MainPage;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}