{"ast":null,"code":"import _objectSpread from\"/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{useLocation,useNavigate}from'react-router-dom';import MainHeader from'../components/MainHeader';import Posts from'../components/Posts';import UserInfoGrid from'../components/UserInfoGrid';import PostGrid from'../components/PostGrid';import userPostsTest from'../posts.json';import usersInfo from'../users.json';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MainPage=function MainPage(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),userPosts=_useState2[0],setUserPosts=_useState2[1];var navigate=useNavigate();var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),searchQuery=_useState4[0],setSearchQuery=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),newFollowerName=_useState6[0],setNewFollowerName=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),followedUsers=_useState8[0],setFollowedUsers=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),errorMessage=_useState10[0],setErrorMessage=_useState10[1];var location=useLocation();var userData=location.state.userData;var defaultPostImage='https://media.istockphoto.com/id/1420755455/photo/grunge-dirty-background-overlay.webp?b=1&s=170667a&w=0&k=20&c=7wfOkV1I0RJVAsuZlCzMD8zRenjlWo1hUYCAIsGBckw=';useEffect(function(){var fetchFollowers=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var data,loggedInUser,followingIds,followedUsersList;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:// const response = await fetch('https://jsonplaceholder.typicode.com/users');\n// const data = await response.json();\ndata=usersInfo;if(Number.isInteger(userData.id)){_context.next=4;break;}setFollowedUsers([]);return _context.abrupt(\"return\",[]);case 4:loggedInUser=data.find(function(user){return user.id===userData.id;});followingIds=Array.from({length:3},function(_,index){return(userData.id+index+1)%10||10;});followedUsersList=data.filter(function(user){return followingIds.includes(user.id)&&user.id!==userData.id;});setFollowedUsers(followedUsersList);return _context.abrupt(\"return\",followedUsersList);case 9:case\"end\":return _context.stop();}},_callee);}));return function fetchFollowers(){return _ref.apply(this,arguments);};}();var fetchUserPosts=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(followedUsers){var _ref3;var postsForLoggedUser,postsPromises,postsResults,flattenedFollowedUsersPosts,userPostsList,mergedPosts,sortedPosts;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:// const responseForLoggedUser = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${userData.id}`);\n// const postsForLoggedUser = await responseForLoggedUser.json();\npostsForLoggedUser=userPostsTest.filter(function(post){return post.userId===userData.id;});// const postsPromises = followedUsers.map(user => \n//     fetch(`https://jsonplaceholder.typicode.com/posts?userId=${user.id}`).then(res => res.json())\n// );\npostsPromises=followedUsers.map(function(user){return userPostsTest.filter(function(post){return post.userId===user.id;});});_context2.next=4;return Promise.all(postsPromises);case 4:postsResults=_context2.sent;flattenedFollowedUsersPosts=(_ref3=[]).concat.apply(_ref3,_toConsumableArray(postsResults)).map(function(post){var userForPost=followedUsers.find(function(u){return u.id===post.userId;});return _objectSpread(_objectSpread({},post),{},{user:userForPost,timestamp:new Date(Date.now()-Math.floor(Math.random()*10*365*24*60*60*1000)).toLocaleString(),image:defaultPostImage});});userPostsList=postsForLoggedUser.map(function(post){return _objectSpread(_objectSpread({},post),{},{user:userData,timestamp:new Date(Date.now()-Math.floor(Math.random()*10*365*24*60*60*1000)).toLocaleString(),image:defaultPostImage});});mergedPosts=[].concat(_toConsumableArray(userPostsList),_toConsumableArray(flattenedFollowedUsersPosts));sortedPosts=mergedPosts.sort(function(a,b){return new Date(b.timestamp)-new Date(a.timestamp);});setUserPosts(sortedPosts);case 10:case\"end\":return _context2.stop();}},_callee2);}));return function fetchUserPosts(_x){return _ref2.apply(this,arguments);};}();fetchFollowers().then(function(followedUsers){return fetchUserPosts(followedUsers);});// fetchFollowers().then(\n// fetchUserPosts(followedUsers)\n},[userData.id]);var handleAddFollower=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var users,newFollower,postsForNewFollower,postsWithTimestampAndImage,updatedPosts,sortedPosts;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:// const response = await fetch('https://jsonplaceholder.typicode.com/users');\n// const users = await response.json();\nusers=usersInfo;newFollower=users.find(function(user){return user.username.toLowerCase()===newFollowerName.toLowerCase();});if(newFollower&&newFollower.id!=userData.id){setFollowedUsers([].concat(_toConsumableArray(followedUsers),[newFollower]));// const responseForNewFollower = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${newFollower.id}`);\n// const postsForNewFollower = await responseForNewFollower.json();\npostsForNewFollower=userPostsTest.filter(function(post){return post.userId===newFollower.id;});postsWithTimestampAndImage=postsForNewFollower.map(function(post){return _objectSpread(_objectSpread({},post),{},{user:newFollower,timestamp:new Date(Date.now()-Math.floor(Math.random()*10*365*24*60*60*1000)).toLocaleString(),image:defaultPostImage});});updatedPosts=[].concat(_toConsumableArray(userPosts),_toConsumableArray(postsWithTimestampAndImage));sortedPosts=updatedPosts.sort(function(a,b){return new Date(b.timestamp)-new Date(a.timestamp);});setUserPosts(sortedPosts);setErrorMessage('');}else{setErrorMessage('User not found or invalid.');}setNewFollowerName('');case 4:case\"end\":return _context3.stop();}},_callee3);}));return function handleAddFollower(){return _ref4.apply(this,arguments);};}();var handleUnfollow=function handleUnfollow(userId){var updatedFollowedUsers=followedUsers.filter(function(user){return user.id!==userId;});setFollowedUsers(updatedFollowedUsers);var updatedPosts=userPosts.filter(function(post){return post.user.id!==userId;});var sortedPosts=updatedPosts.sort(function(a,b){return new Date(b.timestamp)-new Date(a.timestamp);});setUserPosts(sortedPosts);};var handleSearch=function handleSearch(e){setSearchQuery(e.target.value);};var handleComment=function handleComment(postId){};var handleEdit=function handleEdit(postId){};var handlePostSubmit=function handlePostSubmit(newPost){setUserPosts([newPost].concat(_toConsumableArray(userPosts)));};var handleStatusUpdate=function handleStatusUpdate(newStatus){};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(MainHeader,{navigate:navigate,userData:userData}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsx(UserInfoGrid,{user:userData,onUpdateStatus:handleStatusUpdate}),/*#__PURE__*/_jsx(PostGrid,{user:userData,onPostSubmit:handlePostSubmit})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"follow-user-h2\",children:\"Followed Users\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"follow-user-ul\",children:followedUsers.map(function(user){return/*#__PURE__*/_jsxs(\"li\",{className:\"follow-user-li\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"follow-user-img\",src:\"https://media.istockphoto.com/id/1403045742/photo/happy-mixed-race-father-and-son-brushing-their-teeth-together-in-a-bathroom-at-home-single.webp?b=1&s=170667a&w=0&k=20&c=siRQqYPxmZsWtoedb7eoQOzRvQl1GVg_ccCAOsICTCw=\",alt:\"Avatar\"}),/*#__PURE__*/_jsx(\"p\",{children:user.username}),/*#__PURE__*/_jsx(\"p\",{children:user.company.catchPhrase}),/*#__PURE__*/_jsx(\"button\",{\"data-testid\":\"unfollow-\".concat(user.id),onClick:function onClick(){return handleUnfollow(user.id);},children:\"Unfollow\"})]},user.id);})}),/*#__PURE__*/_jsx(\"input\",{className:\"se\",type:\"text\",\"data-testid\":\"add-follower-name\",placeholder:\"Enter name\",value:newFollowerName,onChange:function onChange(e){return setNewFollowerName(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{\"data-testid\":\"add-follower\",onClick:handleAddFollower,children:\"Add Follower\"}),errorMessage&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:errorMessage})]}),/*#__PURE__*/_jsx(\"div\",{className:\"search-bar\",children:/*#__PURE__*/_jsx(\"input\",{\"data-testid\":\"search-test\",type:\"text\",placeholder:\"Search by author or text...\",value:searchQuery,onChange:handleSearch})}),/*#__PURE__*/_jsx(\"div\",{\"data-testid\":\"user-posts\",children:userPosts.filter(function(post){return post.title.toLowerCase().includes(searchQuery.toLowerCase())||post.body.toLowerCase().includes(searchQuery.toLowerCase())||post.user.username.toLowerCase().includes(searchQuery.toLowerCase());}).map(function(post){return/*#__PURE__*/_jsx(Posts,{post:post,onComment:handleComment,onEdit:handleEdit},post.id);})})]});};export default MainPage;","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","MainHeader","Posts","UserInfoGrid","PostGrid","userPostsTest","usersInfo","jsx","_jsx","jsxs","_jsxs","MainPage","_useState","_useState2","_slicedToArray","userPosts","setUserPosts","navigate","_useState3","_useState4","searchQuery","setSearchQuery","_useState5","_useState6","newFollowerName","setNewFollowerName","_useState7","_useState8","followedUsers","setFollowedUsers","_useState9","_useState10","errorMessage","setErrorMessage","location","userData","state","defaultPostImage","fetchFollowers","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","loggedInUser","followingIds","followedUsersList","wrap","_callee$","_context","prev","next","Number","isInteger","id","abrupt","find","user","Array","from","length","_","index","filter","includes","stop","apply","arguments","fetchUserPosts","_ref2","_callee2","_ref3","postsForLoggedUser","postsPromises","postsResults","flattenedFollowedUsersPosts","userPostsList","mergedPosts","sortedPosts","_callee2$","_context2","post","userId","map","Promise","all","sent","concat","_toConsumableArray","userForPost","u","_objectSpread","timestamp","Date","now","Math","floor","random","toLocaleString","image","sort","a","b","_x","then","handleAddFollower","_ref4","_callee3","users","newFollower","postsForNewFollower","postsWithTimestampAndImage","updatedPosts","_callee3$","_context3","username","toLowerCase","handleUnfollow","updatedFollowedUsers","handleSearch","e","target","value","handleComment","postId","handleEdit","handlePostSubmit","newPost","handleStatusUpdate","newStatus","children","className","onUpdateStatus","onPostSubmit","src","alt","company","catchPhrase","onClick","type","placeholder","onChange","style","color","title","body","onComment","onEdit"],"sources":["/Users/gaoqiantong/Desktop/comp431/hw/hw6-frontend-Moongram/src/pages/Main.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport MainHeader from '../components/MainHeader';\nimport Posts from '../components/Posts';\nimport UserInfoGrid from '../components/UserInfoGrid';\nimport PostGrid from '../components/PostGrid';\nimport userPostsTest from '../posts.json';\nimport usersInfo from '../users.json'\n\n\nconst MainPage = () => {\n  const [userPosts, setUserPosts] = useState([]);\n  const navigate = useNavigate();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [newFollowerName, setNewFollowerName] = useState('');\n  const [followedUsers, setFollowedUsers] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const location = useLocation();\n  const userData = location.state.userData;\n  const defaultPostImage = 'https://media.istockphoto.com/id/1420755455/photo/grunge-dirty-background-overlay.webp?b=1&s=170667a&w=0&k=20&c=7wfOkV1I0RJVAsuZlCzMD8zRenjlWo1hUYCAIsGBckw=';\n  useEffect(() => {\n    const fetchFollowers = async () => {\n        // const response = await fetch('https://jsonplaceholder.typicode.com/users');\n        // const data = await response.json();\n        const data = usersInfo;\n\n        if (!Number.isInteger(userData.id)) {\n          setFollowedUsers([])\n          return ([])\n        }\n        const loggedInUser = data.find(user => user.id === userData.id);\n        const followingIds = Array.from({ length: 3 }, (_, index) => (userData.id + index + 1) % 10 || 10);\n        const followedUsersList = data.filter(user => followingIds.includes(user.id) && user.id !== userData.id);\n\n        setFollowedUsers(followedUsersList);\n        return followedUsersList;\n    };\n\n    const fetchUserPosts = async (followedUsers) => {\n        // const responseForLoggedUser = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${userData.id}`);\n        // const postsForLoggedUser = await responseForLoggedUser.json();\n        const postsForLoggedUser = userPostsTest.filter(post => post.userId === userData.id);\n        // const postsPromises = followedUsers.map(user => \n        //     fetch(`https://jsonplaceholder.typicode.com/posts?userId=${user.id}`).then(res => res.json())\n        // );\n        const postsPromises = followedUsers.map(user => \n          userPostsTest.filter(post => post.userId === user.id)\n        );\n        \n        const postsResults = await Promise.all(postsPromises);\n\n        const flattenedFollowedUsersPosts = [].concat(...postsResults).map(post => {\n            const userForPost = followedUsers.find(u => u.id === post.userId);\n            return {\n                ...post,\n                user: userForPost,\n                timestamp: new Date(Date.now() - Math.floor(Math.random() * 10 * 365 * 24 * 60 * 60 * 1000)).toLocaleString(),\n                image: defaultPostImage\n            };\n        });\n\n        const userPostsList = postsForLoggedUser.map(post => ({\n            ...post,\n            user: userData,\n            timestamp: new Date(Date.now() - Math.floor(Math.random() * 10 * 365 * 24 * 60 * 60 * 1000)).toLocaleString(),\n            image: defaultPostImage\n        }));\n\n        const mergedPosts = [...userPostsList, ...flattenedFollowedUsersPosts];\n\n        const sortedPosts = mergedPosts.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n        setUserPosts(sortedPosts);\n    };\n    fetchFollowers().then(\n      followedUsers => fetchUserPosts(followedUsers));\n    // fetchFollowers().then(\n    // fetchUserPosts(followedUsers)\n\n }, [userData.id]);\n\n\n  const handleAddFollower = async () => {\n    // const response = await fetch('https://jsonplaceholder.typicode.com/users');\n    // const users = await response.json();\n    const users = usersInfo;\n\n    const newFollower = users.find(user => user.username.toLowerCase() === newFollowerName.toLowerCase());\n  \n    if (newFollower && newFollower.id != userData.id) {\n      setFollowedUsers([...followedUsers, newFollower]);\n      // const responseForNewFollower = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${newFollower.id}`);\n      // const postsForNewFollower = await responseForNewFollower.json();\n      const postsForNewFollower = userPostsTest.filter(post => post.userId === newFollower.id)\n\n\n      const postsWithTimestampAndImage = postsForNewFollower.map(post => ({\n        ...post,\n        user: newFollower,\n        timestamp: new Date(Date.now() - Math.floor(Math.random() * 10 * 365 * 24 * 60 * 60 * 1000)).toLocaleString(),\n        image: defaultPostImage\n      }));\n      \n      const updatedPosts = [...userPosts, ...postsWithTimestampAndImage];\n      const sortedPosts = updatedPosts.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n      setUserPosts(sortedPosts);\n      setErrorMessage(''); \n    } else {\n      setErrorMessage('User not found or invalid.');\n    }\n  \n    setNewFollowerName('');\n  };\n  \n\n  const handleUnfollow = userId => {\n    const updatedFollowedUsers = followedUsers.filter(user => user.id !== userId);\n    setFollowedUsers(updatedFollowedUsers);\n    const updatedPosts = userPosts.filter(post => post.user.id !== userId);\n    const sortedPosts = updatedPosts.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n    setUserPosts(sortedPosts);\n  };\n\n  const handleSearch = (e) => {\n    setSearchQuery(e.target.value)\n    \n    \n  };\n\n  const handleComment = postId => {\n  };\n\n  const handleEdit = postId => {\n  \n  };\n\n  const handlePostSubmit = newPost => {\n    setUserPosts([newPost, ...userPosts]);\n  };\n\n  const handleStatusUpdate = newStatus => {\n\n  };\n\n  return (\n    <div>\n      <MainHeader navigate={navigate} userData={userData} />\n      <div className=\"main-content\">\n        <UserInfoGrid user={userData} onUpdateStatus={handleStatusUpdate} />\n        <PostGrid user={userData} onPostSubmit={handlePostSubmit} />\n      </div>\n      <div className=\"sidebar\">\n        <h2 className = \"follow-user-h2\">Followed Users</h2>\n        <ul className=\"follow-user-ul\">\n          {followedUsers.map(user => (\n            <li className='follow-user-li'key={user.id}>\n              <img className='follow-user-img' src=\"https://media.istockphoto.com/id/1403045742/photo/happy-mixed-race-father-and-son-brushing-their-teeth-together-in-a-bathroom-at-home-single.webp?b=1&s=170667a&w=0&k=20&c=siRQqYPxmZsWtoedb7eoQOzRvQl1GVg_ccCAOsICTCw=\" alt=\"Avatar\" />\n              <p>{user.username}</p>\n              <p>{user.company.catchPhrase}</p>\n\n              <button data-testid={`unfollow-${user.id}`} onClick={() => handleUnfollow(user.id)}>Unfollow</button>\n            </li>\n          ))}\n        </ul>\n        <input className='se'\n          type=\"text\"\n          data-testid='add-follower-name'\n          placeholder=\"Enter name\"\n          value={newFollowerName}\n          onChange={e => setNewFollowerName(e.target.value)}\n        />\n        <button data-testid='add-follower' onClick={handleAddFollower}>Add Follower</button>\n        {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n\n      </div>\n      <div className=\"search-bar\">\n        <input data-testid='search-test'\n          type=\"text\"\n          placeholder=\"Search by author or text...\"\n          value={searchQuery}\n          onChange={handleSearch}\n        />\n      </div>\n      <div data-testid='user-posts'>\n      {userPosts.filter(post => {\n        return post.title.toLowerCase().includes(searchQuery.toLowerCase()) || post.body.toLowerCase().includes(searchQuery.toLowerCase()) || post.user.username.toLowerCase().includes(searchQuery.toLowerCase()) ;\n      }).map(post => (\n        <Posts\n          key={post.id}\n          post={post}\n          onComment={handleComment}\n          onEdit={handleEdit}\n        />\n      ))}\n    </div>\n    </div>\n  );\n};\n\nexport default MainPage;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}