{"ast":null,"code":"var _jsxFileName = \"/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/components/PostGrid.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostGrid = ({\n  onPostSubmit,\n  user\n}) => {\n  _s();\n  const [postText, setPostText] = useState('');\n  const [image, setImage] = useState(null);\n  const fileInputRef = useRef();\n  const handlePostSubmit = () => {\n    const newPost = {\n      id: Date.now(),\n      title: \"Your New Post!\",\n      text: postText,\n      author: user,\n      date: new Date(),\n      image: image ? URL.createObjectURL(image) : null\n    };\n    console.log(\"Post Text:\", postText);\n    console.log(\"Image File:\", image);\n    const formData = new FormData();\n    formData.append('text', postText);\n    if (image) {\n      formData.append('image', image);\n    }\n    console.log(formData);\n    axios.post('http://localhost:3000/article', formData, {\n      withCredentials: true\n    }).then(_response => {\n      onPostSubmit(newPost);\n    }).catch(error => {\n      console.error(\"Post failed\", error);\n    });\n    setPostText('');\n    setImage(null);\n    fileInputRef.current.value = '';\n  };\n  const handleClear = () => {\n    setPostText('');\n    setImage(null);\n    fileInputRef.current.value = '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Write your post...\",\n      value: postText,\n      onChange: e => setPostText(e.target.value),\n      className: \"post-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"post-button\",\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: e => setImage(e.target.files[0]),\n      ref: fileInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePostSubmit,\n        className: \"post-button\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClear,\n        className: \"post-button\",\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(PostGrid, \"/4u6gSEGulMBq3XTp3I+yU1oSLY=\");\n_c = PostGrid;\nexport default PostGrid;\nvar _c;\n$RefreshReg$(_c, \"PostGrid\");","map":{"version":3,"names":["axios","React","useState","useRef","jsxDEV","_jsxDEV","PostGrid","onPostSubmit","user","_s","postText","setPostText","image","setImage","fileInputRef","handlePostSubmit","newPost","id","Date","now","title","text","author","date","URL","createObjectURL","console","log","formData","FormData","append","post","withCredentials","then","_response","catch","error","current","value","handleClear","className","children","type","placeholder","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","accept","files","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/components/PostGrid.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useState, useRef } from 'react';\n\nconst PostGrid = ({ onPostSubmit, user }) => {\n  const [postText, setPostText] = useState('');\n  const [image, setImage] = useState(null);\n  const fileInputRef = useRef();\n  \nconst handlePostSubmit = () => {\n    const newPost = {\n      id: Date.now(), \n      title: \"Your New Post!\",\n      text: postText,\n      author: user,\n      date: new Date(),\n      image: image ? URL.createObjectURL(image) : null \n    };\n\n    console.log(\"Post Text:\", postText);\n    console.log(\"Image File:\", image);\n    \n    const formData = new FormData();\n    formData.append('text', postText);\n    if (image) {\n        formData.append('image', image);\n    }\n\n\n    console.log(formData);\n    axios.post('http://localhost:3000/article', formData, { withCredentials: true })\n    .then(_response => {\n      onPostSubmit(newPost);\n    }).catch(error => {\n    console.error(\"Post failed\", error);\n});\n\n    setPostText('');\n    setImage(null);\n    fileInputRef.current.value = ''; \n  };\n  const handleClear = () => {\n    setPostText('');\n    setImage(null);\n    fileInputRef.current.value = ''; \n\n  };\n\n  return (\n    <div className=\"post-grid\">\n      <input\n        type=\"text\"\n        placeholder=\"Write your post...\"\n        value={postText}\n        onChange={(e) => setPostText(e.target.value)}\n        className=\"post-input\"\n      />\n      <input className=\"post-button\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={(e) => setImage(e.target.files[0])}\n        ref={fileInputRef} \n      />\n      <div className=\"post-button-container\">\n        <button onClick={handlePostSubmit} className=\"post-button\">Post</button>\n        <button onClick={handleClear} className=\"post-button\">Clear</button>\n      </div>\n\n    </div>\n  );\n};\n\nexport default PostGrid;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}