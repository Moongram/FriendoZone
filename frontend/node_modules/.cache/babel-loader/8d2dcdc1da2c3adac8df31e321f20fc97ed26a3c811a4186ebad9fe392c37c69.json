{"ast":null,"code":"var _jsxFileName = \"/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport userDataTest from '../users.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = ({\n  navigate\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [users, setUsers] = useState(userDataTest);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // const fetchUserData = () => {\n  //   fetch(\"https://jsonplaceholder.typicode.com/users\")\n  //     .then(response => response.json())\n  //     .then(data => {\n  //       setUsers(data);\n  //     });\n  // };\n\n  // useEffect(() => {\n  //   fetchUserData();\n  // }, []);\n\n  const validate = event => {\n    if (users.length === 0) {\n      setUsers(userDataTest);\n    }\n    event.preventDefault();\n    setErrorMessage('');\n    const backendUserData = {\n      username: username,\n      password: password\n    };\n    console.log(backendUserData);\n    // Send data to the backend\n    axios.post('http://localhost:3000/login', backendUserData).then(response => {\n      if (response.data.result === 'success') {\n        setIsLoggedIn(true);\n        const username = response.data.username; // Assuming the username is returned here\n        // Now make additional requests to get profile information\n        return Promise.all([axios.get(`http://localhost:3000/headline/${username}`), axios.get(`http://localhost:3000/email/${username}`), axios.get(`http://localhost:3000/phone/${username}`), axios.get(`http://localhost:3000/zipcode/${username}`), axios.get(`http://localhost:3000/avatar/${username}`)]);\n      } else {\n        setIsLoggedIn(false);\n        setErrorMessage('Invalid username or password!');\n        return Promise.reject('Login failed');\n      }\n    }).then(responses => {\n      // All additional information is loaded\n      const headlineResponse = responses[0].data;\n      const emailResponse = responses[1].data;\n      const phoneResponse = responses[2].data;\n      const zipcodeResponse = responses[3].data;\n      const avatarResponse = responses[4].data;\n\n      // Construct userData with additional information\n      const userData = {\n        username: headlineResponse.username,\n        headline: headlineResponse.headline,\n        email: emailResponse.email\n        // Add more data as needed\n      };\n\n      navigate('/main', {\n        state: {\n          userData: userData\n        }\n      });\n    }).catch(error => {\n      if (error !== 'Login failed') {\n        var _error$response, _error$response$data;\n        setErrorMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error during login');\n      }\n    });\n\n    // let userExists = false;\n    // let passwordConfirm = false;\n    // let userData;\n    // for (let i = 0; i < users.length; i++) {\n\n    //   if (users[i].username === username) {\n    //     userExists = true;\n    //     if (users[i].address.street === password) {\n    //       passwordConfirm = true;\n    //       userData = users[i];\n    //     }\n    //     break;\n    //   }\n    // }\n\n    // if (userExists && passwordConfirm) {\n    //   setIsLoggedIn(true); // Set isLoggedIn to true if login is successful\n    //   navigate('/main', { state: { userData: userData } });\n    // } else {\n    //   setIsLoggedIn(false); // Set isLoggedIn to false if login fails\n    //   setErrorMessage('Invalid username or password!');\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Login Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"login\",\n      \"data-testid\": \"login-form-1\",\n      onSubmit: validate,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Username: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"account\",\n          \"data-testid\": \"Username\",\n          required: true,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          \"data-testid\": \"Password\",\n          required: true,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Login\",\n          \"data-testid\": \"login-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 24\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Welcome, User!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"AuLfvZdwXDAvFtIHd6CeYhvlgMY=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useEffect","userDataTest","jsxDEV","_jsxDEV","LoginForm","navigate","_s","username","setUsername","password","setPassword","errorMessage","setErrorMessage","users","setUsers","isLoggedIn","setIsLoggedIn","validate","event","length","preventDefault","backendUserData","console","log","axios","post","then","response","data","result","Promise","all","get","reject","responses","headlineResponse","emailResponse","phoneResponse","zipcodeResponse","avatarResponse","userData","headline","email","state","catch","error","_error$response","_error$response$data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onSubmit","type","name","required","onChange","e","target","value","style","color","_c","$RefreshReg$"],"sources":["/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/components/LoginForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport userDataTest from '../users.json'\n\nconst LoginForm = ({ navigate }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [users, setUsers] = useState(userDataTest);\n  const [isLoggedIn, setIsLoggedIn] = useState(false); \n  // const fetchUserData = () => {\n  //   fetch(\"https://jsonplaceholder.typicode.com/users\")\n  //     .then(response => response.json())\n  //     .then(data => {\n  //       setUsers(data);\n  //     });\n  // };\n\n  // useEffect(() => {\n  //   fetchUserData();\n  // }, []);\n \n\n  const validate = (event) => {\n    if (users.length === 0) {\n      setUsers(userDataTest)\n    }\n    event.preventDefault();\n    setErrorMessage('');\n\n    const backendUserData = {\n      username: username,\n      password: password\n    }\n    console.log(backendUserData);\n     // Send data to the backend\n     axios.post('http://localhost:3000/login', backendUserData)\n     .then(response => {\n       if (response.data.result === 'success') {\n         setIsLoggedIn(true);\n         const username = response.data.username; // Assuming the username is returned here\n         // Now make additional requests to get profile information\n         return Promise.all([\n           axios.get(`http://localhost:3000/headline/${username}`),\n           axios.get(`http://localhost:3000/email/${username}`),\n           axios.get(`http://localhost:3000/phone/${username}`),\n           axios.get(`http://localhost:3000/zipcode/${username}`),\n           axios.get(`http://localhost:3000/avatar/${username}`)\n         ]);\n       } else {\n         setIsLoggedIn(false);\n         setErrorMessage('Invalid username or password!');\n         return Promise.reject('Login failed');\n       }\n     })\n     .then(responses => {\n       // All additional information is loaded\n       const headlineResponse = responses[0].data;\n       const emailResponse = responses[1].data;\n       const phoneResponse = responses[2].data;\n        const zipcodeResponse = responses[3].data;\n        const avatarResponse = responses[4].data;\n   \n       // Construct userData with additional information\n       const userData = {\n         username: headlineResponse.username,\n         headline: headlineResponse.headline,\n         email: emailResponse.email,\n         // Add more data as needed\n       };\n   \n       navigate('/main', { state: { userData: userData } });\n     })\n     .catch(error => {\n       if (error !== 'Login failed') {\n         setErrorMessage(error.response?.data?.message || 'Error during login');\n       }\n     });\n   \n    // let userExists = false;\n    // let passwordConfirm = false;\n    // let userData;\n    // for (let i = 0; i < users.length; i++) {\n\n    //   if (users[i].username === username) {\n    //     userExists = true;\n    //     if (users[i].address.street === password) {\n    //       passwordConfirm = true;\n    //       userData = users[i];\n    //     }\n    //     break;\n    //   }\n    // }\n\n    // if (userExists && passwordConfirm) {\n    //   setIsLoggedIn(true); // Set isLoggedIn to true if login is successful\n    //   navigate('/main', { state: { userData: userData } });\n    // } else {\n    //   setIsLoggedIn(false); // Set isLoggedIn to false if login fails\n    //   setErrorMessage('Invalid username or password!');\n    // }\n  };\n\n  return (\n    <div className=\"login-form\" >\n      <h2>User Login Form</h2>\n      <form id=\"login\" data-testid=\"login-form-1\" onSubmit={validate}>\n        <p>Username: <input type=\"text\" name=\"account\" data-testid=\"Username\" required onChange={(e) => setUsername(e.target.value)} /></p>\n        <p>Password: <input type=\"password\" name=\"password\" data-testid=\"Password\" required onChange={(e) => setPassword(e.target.value)} /></p>\n        <div className=\"button-container\">\n          <input type=\"submit\" value=\"Login\" data-testid=\"login-button\"/>\n        </div>\n      </form>\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n      {isLoggedIn && <p>Welcome, User!</p>}\n    </div>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}