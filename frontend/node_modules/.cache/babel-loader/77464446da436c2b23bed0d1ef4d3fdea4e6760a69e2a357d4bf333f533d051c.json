{"ast":null,"code":"var _jsxFileName = \"/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/pages/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport MainHeader from '../components/MainHeader';\nimport Posts from '../components/Posts';\nimport UserInfoGrid from '../components/UserInfoGrid';\nimport PostGrid from '../components/PostGrid';\nimport userPostsTest from '../posts.json';\nimport usersInfo from '../users.json';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [userPosts, setUserPosts] = useState([]);\n  const navigate = useNavigate();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [newFollowerName, setNewFollowerName] = useState('');\n  const [followedUsers, setFollowedUsers] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const location = useLocation();\n  const userData = location.state.userData;\n  const defaultPostImage = 'https://media.istockphoto.com/id/1420755455/photo/grunge-dirty-background-overlay.webp?b=1&s=170667a&w=0&k=20&c=7wfOkV1I0RJVAsuZlCzMD8zRenjlWo1hUYCAIsGBckw=';\n  useEffect(() => {\n    // const fetchFollowers = async () => {\n    //     // const response = await fetch('https://jsonplaceholder.typicode.com/users');\n    //     // const data = await response.json();\n    //     const data = usersInfo;\n\n    //     if (!Number.isInteger(userData.id)) {\n    //       setFollowedUsers([])\n    //       return ([])\n    //     }\n    //     const loggedInUser = data.find(user => user.id === userData.id);\n    //     const followingIds = Array.from({ length: 3 }, (_, index) => (userData.id + index + 1) % 10 || 10);\n    //     const followedUsersList = data.filter(user => followingIds.includes(user.id) && user.id !== userData.id);\n\n    //     setFollowedUsers(followedUsersList);\n    //     return followedUsersList;\n    // };\n    const fetchFollowers = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/following/${userData.username}`, {\n          withCredentials: true\n        });\n        setFollowedUsers(response.data.following);\n        console.log(followedUsers);\n        return followedUsers;\n      } catch (error) {\n        console.error('Error fetching followers:', error);\n      }\n    };\n    const fetchUserPosts = async followedUsers => {\n      // const responseForLoggedUser = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${userData.id}`);\n      // const postsForLoggedUser = await responseForLoggedUser.json();\n      const postsForLoggedUser = userPostsTest.filter(post => post.userId === userData.id);\n      // const postsPromises = followedUsers.map(user => \n      //     fetch(`https://jsonplaceholder.typicode.com/posts?userId=${user.id}`).then(res => res.json())\n      // );\n      const postsPromises = followedUsers.map(user => userPostsTest.filter(post => post.userId === user.id));\n      const postsResults = await Promise.all(postsPromises);\n      const flattenedFollowedUsersPosts = [].concat(...postsResults).map(post => {\n        const userForPost = followedUsers.find(u => u.id === post.userId);\n        return {\n          ...post,\n          user: userForPost,\n          timestamp: new Date(Date.now() - Math.floor(Math.random() * 10 * 365 * 24 * 60 * 60 * 1000)).toLocaleString(),\n          image: defaultPostImage\n        };\n      });\n      const userPostsList = postsForLoggedUser.map(post => ({\n        ...post,\n        user: userData,\n        timestamp: new Date(Date.now() - Math.floor(Math.random() * 10 * 365 * 24 * 60 * 60 * 1000)).toLocaleString(),\n        image: defaultPostImage\n      }));\n      const mergedPosts = [...userPostsList, ...flattenedFollowedUsersPosts];\n      const sortedPosts = mergedPosts.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n      setUserPosts(sortedPosts);\n    };\n    fetchFollowers().then(followedUsers => fetchUserPosts(followedUsers));\n    // fetchFollowers().then(\n    // fetchUserPosts(followedUsers)\n  }, [userData.id]);\n  const handleAddFollower = async () => {\n    console.log(\"get in\");\n    try {\n      console.log(\"dfdfd\");\n      const response = await axios.put(`http://localhost:3000/following/${newFollowerName}`, {}, {\n        withCredentials: true\n      });\n      console.log(\"sssss\", response);\n      if (response.status) {\n        console.log('Follower added');\n      } else {\n        console.log('Follower add failed');\n        setErrorMessage(\"user not found.\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    ;\n    // // const response = await fetch('https://jsonplaceholder.typicode.com/users');\n    // // const users = await response.json();\n    // const users = usersInfo;\n\n    // const newFollower = users.find(user => user.username.toLowerCase() === newFollowerName.toLowerCase());\n\n    // if (newFollower && newFollower.id != userData.id) {\n    //   setFollowedUsers([...followedUsers, newFollower]);\n    //   // const responseForNewFollower = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${newFollower.id}`);\n    //   // const postsForNewFollower = await responseForNewFollower.json();\n    //   const postsForNewFollower = userPostsTest.filter(post => post.userId === newFollower.id)\n\n    //   const postsWithTimestampAndImage = postsForNewFollower.map(post => ({\n    //     ...post,\n    //     user: newFollower,\n    //     timestamp: new Date(Date.now() - Math.floor(Math.random() * 10 * 365 * 24 * 60 * 60 * 1000)).toLocaleString(),\n    //     image: defaultPostImage\n    //   }));\n\n    //   const updatedPosts = [...userPosts, ...postsWithTimestampAndImage];\n    //   const sortedPosts = updatedPosts.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n    //   setUserPosts(sortedPosts);\n    //   setErrorMessage(''); \n    // } else {\n    //   setErrorMessage('User not found or invalid.');\n    // }\n\n    // setNewFollowerName('');\n  };\n\n  const handleUnfollow = userId => {\n    const updatedFollowedUsers = followedUsers.filter(user => user.id !== userId);\n    setFollowedUsers(updatedFollowedUsers);\n    const updatedPosts = userPosts.filter(post => post.user.id !== userId);\n    const sortedPosts = updatedPosts.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n    setUserPosts(sortedPosts);\n  };\n  const handleSearch = e => {\n    setSearchQuery(e.target.value);\n  };\n  const handleComment = postId => {};\n  const handleEdit = postId => {};\n  const handlePostSubmit = newPost => {\n    setUserPosts([newPost, ...userPosts]);\n  };\n  const handleStatusUpdate = newStatus => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      navigate: navigate,\n      userData: userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(UserInfoGrid, {\n        user: userData,\n        onUpdateStatus: handleStatusUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostGrid, {\n        user: userData,\n        onPostSubmit: handlePostSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"follow-user-h2\",\n        children: \"Followed Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"follow-user-ul\",\n        children: followedUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"follow-user-li\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"follow-user-img\",\n            src: \"https://media.istockphoto.com/id/1403045742/photo/happy-mixed-race-father-and-son-brushing-their-teeth-together-in-a-bathroom-at-home-single.webp?b=1&s=170667a&w=0&k=20&c=siRQqYPxmZsWtoedb7eoQOzRvQl1GVg_ccCAOsICTCw=\",\n            alt: \"Avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: user.company.catchPhrase\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            \"data-testid\": `unfollow-${user.id}`,\n            onClick: () => handleUnfollow(user.id),\n            children: \"Unfollow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"se\",\n        type: \"text\",\n        \"data-testid\": \"add-follower-name\",\n        placeholder: \"Enter name\",\n        value: newFollowerName,\n        onChange: e => setNewFollowerName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"add-follower\",\n        onClick: handleAddFollower,\n        children: \"Add Follower\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-testid\": \"search-test\",\n        type: \"text\",\n        placeholder: \"Search by author or text...\",\n        value: searchQuery,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"user-posts\",\n      children: userPosts.filter(post => {\n        return post.title.toLowerCase().includes(searchQuery.toLowerCase()) || post.body.toLowerCase().includes(searchQuery.toLowerCase()) || post.user.username.toLowerCase().includes(searchQuery.toLowerCase());\n      }).map(post => /*#__PURE__*/_jsxDEV(Posts, {\n        post: post,\n        onComment: handleComment,\n        onEdit: handleEdit\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s(MainPage, \"Hmoy8UbdMOHBiZPd8LyJawX44pM=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","MainHeader","Posts","UserInfoGrid","PostGrid","userPostsTest","usersInfo","axios","jsxDEV","_jsxDEV","MainPage","_s","userPosts","setUserPosts","navigate","searchQuery","setSearchQuery","newFollowerName","setNewFollowerName","followedUsers","setFollowedUsers","errorMessage","setErrorMessage","location","userData","state","defaultPostImage","fetchFollowers","response","get","username","withCredentials","data","following","console","log","error","fetchUserPosts","postsForLoggedUser","filter","post","userId","id","postsPromises","map","user","postsResults","Promise","all","flattenedFollowedUsersPosts","concat","userForPost","find","u","timestamp","Date","now","Math","floor","random","toLocaleString","image","userPostsList","mergedPosts","sortedPosts","sort","a","b","then","handleAddFollower","put","status","handleUnfollow","updatedFollowedUsers","updatedPosts","handleSearch","e","target","value","handleComment","postId","handleEdit","handlePostSubmit","newPost","handleStatusUpdate","newStatus","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onUpdateStatus","onPostSubmit","src","alt","company","catchPhrase","onClick","type","placeholder","onChange","style","color","title","toLowerCase","includes","body","onComment","onEdit","_c","$RefreshReg$"],"sources":["/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/pages/Main.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport MainHeader from '../components/MainHeader';\nimport Posts from '../components/Posts';\nimport UserInfoGrid from '../components/UserInfoGrid';\nimport PostGrid from '../components/PostGrid';\nimport userPostsTest from '../posts.json';\nimport usersInfo from '../users.json'\nimport axios from 'axios';\n\nconst MainPage = () => {\n  const [userPosts, setUserPosts] = useState([]);\n  const navigate = useNavigate();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [newFollowerName, setNewFollowerName] = useState('');\n  const [followedUsers, setFollowedUsers] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const location = useLocation();\n  const userData = location.state.userData;\n  const defaultPostImage = 'https://media.istockphoto.com/id/1420755455/photo/grunge-dirty-background-overlay.webp?b=1&s=170667a&w=0&k=20&c=7wfOkV1I0RJVAsuZlCzMD8zRenjlWo1hUYCAIsGBckw=';\n  useEffect(() => {\n    // const fetchFollowers = async () => {\n    //     // const response = await fetch('https://jsonplaceholder.typicode.com/users');\n    //     // const data = await response.json();\n    //     const data = usersInfo;\n\n    //     if (!Number.isInteger(userData.id)) {\n    //       setFollowedUsers([])\n    //       return ([])\n    //     }\n    //     const loggedInUser = data.find(user => user.id === userData.id);\n    //     const followingIds = Array.from({ length: 3 }, (_, index) => (userData.id + index + 1) % 10 || 10);\n    //     const followedUsersList = data.filter(user => followingIds.includes(user.id) && user.id !== userData.id);\n\n    //     setFollowedUsers(followedUsersList);\n    //     return followedUsersList;\n    // };\n    const fetchFollowers = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/following/${userData.username}`, { withCredentials: true });\n        setFollowedUsers(response.data.following);\n        console.log(followedUsers);\n        return followedUsers;\n      } catch (error) {\n        console.error('Error fetching followers:', error);\n      }\n    };\n    \n\n    const fetchUserPosts = async (followedUsers) => {\n        // const responseForLoggedUser = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${userData.id}`);\n        // const postsForLoggedUser = await responseForLoggedUser.json();\n        const postsForLoggedUser = userPostsTest.filter(post => post.userId === userData.id);\n        // const postsPromises = followedUsers.map(user => \n        //     fetch(`https://jsonplaceholder.typicode.com/posts?userId=${user.id}`).then(res => res.json())\n        // );\n        const postsPromises = followedUsers.map(user => \n          userPostsTest.filter(post => post.userId === user.id)\n        );\n        \n        const postsResults = await Promise.all(postsPromises);\n\n        const flattenedFollowedUsersPosts = [].concat(...postsResults).map(post => {\n            const userForPost = followedUsers.find(u => u.id === post.userId);\n            return {\n                ...post,\n                user: userForPost,\n                timestamp: new Date(Date.now() - Math.floor(Math.random() * 10 * 365 * 24 * 60 * 60 * 1000)).toLocaleString(),\n                image: defaultPostImage\n            };\n        });\n\n        const userPostsList = postsForLoggedUser.map(post => ({\n            ...post,\n            user: userData,\n            timestamp: new Date(Date.now() - Math.floor(Math.random() * 10 * 365 * 24 * 60 * 60 * 1000)).toLocaleString(),\n            image: defaultPostImage\n        }));\n\n        const mergedPosts = [...userPostsList, ...flattenedFollowedUsersPosts];\n\n        const sortedPosts = mergedPosts.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n        setUserPosts(sortedPosts);\n    };\n    fetchFollowers().then(\n      followedUsers => fetchUserPosts(followedUsers));\n    // fetchFollowers().then(\n    // fetchUserPosts(followedUsers)\n\n }, [userData.id]);\n\n\n  const handleAddFollower = async () => {\n    console.log(\"get in\")\n    try {\n      console.log(\"dfdfd\")\n      const response = await axios.put(`http://localhost:3000/following/${newFollowerName}`, {}, { withCredentials: true });\n      console.log(\"sssss\",response)\n      if (response.status) {\n        console.log('Follower added');\n      } else {\n        console.log('Follower add failed');\n        setErrorMessage(\"user not found.\");\n      }\n    } catch (error) {\n      console.log(error);\n    };\n    // // const response = await fetch('https://jsonplaceholder.typicode.com/users');\n    // // const users = await response.json();\n    // const users = usersInfo;\n\n    // const newFollower = users.find(user => user.username.toLowerCase() === newFollowerName.toLowerCase());\n  \n    // if (newFollower && newFollower.id != userData.id) {\n    //   setFollowedUsers([...followedUsers, newFollower]);\n    //   // const responseForNewFollower = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${newFollower.id}`);\n    //   // const postsForNewFollower = await responseForNewFollower.json();\n    //   const postsForNewFollower = userPostsTest.filter(post => post.userId === newFollower.id)\n\n\n    //   const postsWithTimestampAndImage = postsForNewFollower.map(post => ({\n    //     ...post,\n    //     user: newFollower,\n    //     timestamp: new Date(Date.now() - Math.floor(Math.random() * 10 * 365 * 24 * 60 * 60 * 1000)).toLocaleString(),\n    //     image: defaultPostImage\n    //   }));\n      \n    //   const updatedPosts = [...userPosts, ...postsWithTimestampAndImage];\n    //   const sortedPosts = updatedPosts.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n    //   setUserPosts(sortedPosts);\n    //   setErrorMessage(''); \n    // } else {\n    //   setErrorMessage('User not found or invalid.');\n    // }\n  \n    // setNewFollowerName('');\n  };\n  \n\n  const handleUnfollow = userId => {\n    const updatedFollowedUsers = followedUsers.filter(user => user.id !== userId);\n    setFollowedUsers(updatedFollowedUsers);\n    const updatedPosts = userPosts.filter(post => post.user.id !== userId);\n    const sortedPosts = updatedPosts.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n    setUserPosts(sortedPosts);\n  };\n\n  const handleSearch = (e) => {\n    setSearchQuery(e.target.value)\n    \n    \n  };\n\n  const handleComment = postId => {\n  };\n\n  const handleEdit = postId => {\n  \n  };\n\n  const handlePostSubmit = newPost => {\n    setUserPosts([newPost, ...userPosts]);\n  };\n\n  const handleStatusUpdate = newStatus => {\n\n  };\n\n  return (\n    <div>\n      <MainHeader navigate={navigate} userData={userData} />\n      <div className=\"main-content\">\n        <UserInfoGrid user={userData} onUpdateStatus={handleStatusUpdate} />\n        <PostGrid user={userData} onPostSubmit={handlePostSubmit} />\n      </div>\n      <div className=\"sidebar\">\n        <h2 className = \"follow-user-h2\">Followed Users</h2>\n        <ul className=\"follow-user-ul\">\n          {followedUsers.map(user => (\n            <li className='follow-user-li'key={user.id}>\n              <img className='follow-user-img' src=\"https://media.istockphoto.com/id/1403045742/photo/happy-mixed-race-father-and-son-brushing-their-teeth-together-in-a-bathroom-at-home-single.webp?b=1&s=170667a&w=0&k=20&c=siRQqYPxmZsWtoedb7eoQOzRvQl1GVg_ccCAOsICTCw=\" alt=\"Avatar\" />\n              <p>{user.username}</p>\n              <p>{user.company.catchPhrase}</p>\n\n              <button data-testid={`unfollow-${user.id}`} onClick={() => handleUnfollow(user.id)}>Unfollow</button>\n            </li>\n          ))}\n        </ul>\n        <input className='se'\n          type=\"text\"\n          data-testid='add-follower-name'\n          placeholder=\"Enter name\"\n          value={newFollowerName}\n          onChange={e => setNewFollowerName(e.target.value)}\n        />\n        <button data-testid='add-follower' onClick={handleAddFollower}>Add Follower</button>\n        {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n\n      </div>\n      <div className=\"search-bar\">\n        <input data-testid='search-test'\n          type=\"text\"\n          placeholder=\"Search by author or text...\"\n          value={searchQuery}\n          onChange={handleSearch}\n        />\n      </div>\n      <div data-testid='user-posts'>\n      {userPosts.filter(post => {\n        return post.title.toLowerCase().includes(searchQuery.toLowerCase()) || post.body.toLowerCase().includes(searchQuery.toLowerCase()) || post.user.username.toLowerCase().includes(searchQuery.toLowerCase()) ;\n      }).map(post => (\n        <Posts\n          key={post.id}\n          post={post}\n          onComment={handleComment}\n          onEdit={handleEdit}\n        />\n      ))}\n    </div>\n    </div>\n  );\n};\n\nexport default MainPage;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}