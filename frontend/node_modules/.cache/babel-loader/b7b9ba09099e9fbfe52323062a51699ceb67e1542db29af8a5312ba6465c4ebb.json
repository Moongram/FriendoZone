{"ast":null,"code":"var _jsxFileName = \"/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/components/Posts.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// const Posts = ({ post}) => {\n//   const [showComments, setShowComments] = useState(true); \n//   // const defaultComments = [\n//   //   \"Good job!\",\n//   //   \"I totally agree with this.\",\n//   //   \"I disagree.\"  ];\n//   const [comments, setComments] = useState([]); \n//   const [showCommentBox, setShowCommentBox] = useState(false);\n//   const [commentContent, setCommentContent] = useState('');\n\n//   const formatDate = (isoString) => {\n//     const date = new Date(isoString);\n//     return date.toLocaleString(); // Or any other format you prefer\n//   };\n//   const fetchComments = async () => {\n//     try {\n//       const response = await axios.get(`http://localhost:3000/articles/${post.pid}`, { withCredentials: true });\n//       const comments = response.data.articles[0].comment;\n\n//       setComments(comments);\n//     } catch (error) {\n//       console.error('Error fetching comments:', error);\n//     }\n//   }\n//   const onComment = (pid) => {\n//       }\n//     useEffect(() => {\n//     fetchComments();\n//   }, [post.pid]);\n//   return (\n//     <div className=\"post-container\">\n//       {/* <div className=\"post-title\">{post.title}</div> */}\n//       <div className=\"post-author\">Author: {post.author}</div>\n//       <div className=\"post-timestamp\">Posted on: {formatDate(post.date)}</div>\n//       <div className=\"post-body\">{post.text}</div>\n//       <div className=\"post-image\">\n//         {post.image && <img src={post.image} alt=\"Post\"/>}\n//       </div>\n//       {showComments && (\n//         <div className=\"comments-section\">\n//           <h4>Comments</h4>\n//           <ul>\n//             {comments && comments.map((comment) => (\n//               <li key={comment.id}>{comment.author}: {comment.message}</li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n//       <div className=\"post-buttons\">\n//         <button className=\"post-button\" onClick={() => onComment(post.pid)}>Leave a Comment</button>\n//         <button className=\"post-button\" onClick={() => onEditPost(post.pid)}>Edit Post</button>\n//         <button className=\"post-button\" onClick={() => onEditComment(post.pid)}>Edit My Comment</button>\n//         <button className=\"post-button\" onClick={() => setShowComments(!showComments)}>\n//           {showComments ? \"Hide Comments\" : \"Show Comments\"}\n//         </button>\n//       </div>\n\n//     </div>\n//   );\n// };\n\n// export default Posts;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = ({\n  post\n}) => {\n  _s();\n  const [showComments, setShowComments] = useState(true);\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const [isEditingPost, setIsEditingPost] = useState(false);\n  const [newComment, setNewComment] = useState('');\n  const [editedPost, setEditedPost] = useState(post.text);\n  const [comments, setComments] = useState([]);\n  const formatDate = isoString => {\n    const date = new Date(isoString);\n    return date.toLocaleString();\n  };\n  useEffect(() => {\n    // Assume axios is configured with the baseURL\n    axios.get(`/articles/${post.pid}`).then(response => {\n      setComments(response.data.articles[0].comments || []);\n    }).catch(error => console.error('Error fetching comments:', error));\n  }, [post.pid]);\n  const handleAddComment = async () => {\n    // Logic for adding a new comment goes here\n  };\n  const handleEditPost = async () => {\n    // Logic for editing a post goes here\n  };\n\n  // JSX for the input field and button when adding a comment\n  const renderAddComment = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-button-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"post-input\",\n      type: \"text\",\n      placeholder: \"Write your comment here...\",\n      value: newComment,\n      onChange: e => setNewComment(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"post-button\",\n      onClick: handleAddComment,\n      children: \"Submit Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n\n  // JSX for the input field and button when editing a post\n  const renderEditPost = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-button-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"post-input\",\n      value: editedPost,\n      onChange: e => setEditedPost(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"post-button\",\n      onClick: handleEditPost,\n      children: \"Save Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-author\",\n      children: [\"Author: \", post.author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-timestamp\",\n      children: [\"Posted on: \", formatDate(post.date)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), isEditingPost ? renderEditPost() : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-body\",\n      children: post.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-image\",\n      children: post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.image,\n        alt: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-buttons\",\n      children: [showComments && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"post-button\",\n        onClick: () => setIsAddingComment(!isAddingComment),\n        children: isAddingComment ? \"Cancel\" : \"Leave a Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"post-button\",\n        onClick: () => setIsEditingPost(!isEditingPost),\n        children: isEditingPost ? \"Cancel\" : \"Edit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"post-button\",\n        onClick: () => setShowComments(!showComments),\n        children: showComments ? \"Hide Comments\" : \"Show Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), isAddingComment && renderAddComment(), showComments && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [comment.author, \": \", comment.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"utylNQCyBfyy3fqfLT6wrG3naZw=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Posts","post","_s","showComments","setShowComments","isAddingComment","setIsAddingComment","isEditingPost","setIsEditingPost","newComment","setNewComment","editedPost","setEditedPost","text","comments","setComments","formatDate","isoString","date","Date","toLocaleString","get","pid","then","response","data","articles","catch","error","console","handleAddComment","handleEditPost","renderAddComment","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","renderEditPost","author","image","src","alt","map","comment","index","message","_c","$RefreshReg$"],"sources":["/Users/gaoqiantong/Desktop/comp431/hw/final-frontend-Moongram/src/components/Posts.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// const Posts = ({ post}) => {\n//   const [showComments, setShowComments] = useState(true); \n//   // const defaultComments = [\n//   //   \"Good job!\",\n//   //   \"I totally agree with this.\",\n//   //   \"I disagree.\"  ];\n//   const [comments, setComments] = useState([]); \n//   const [showCommentBox, setShowCommentBox] = useState(false);\n//   const [commentContent, setCommentContent] = useState('');\n  \n//   const formatDate = (isoString) => {\n//     const date = new Date(isoString);\n//     return date.toLocaleString(); // Or any other format you prefer\n//   };\n//   const fetchComments = async () => {\n//     try {\n//       const response = await axios.get(`http://localhost:3000/articles/${post.pid}`, { withCredentials: true });\n//       const comments = response.data.articles[0].comment;\n    \n//       setComments(comments);\n//     } catch (error) {\n//       console.error('Error fetching comments:', error);\n//     }\n//   }\n//   const onComment = (pid) => {\n//       }\n//     useEffect(() => {\n//     fetchComments();\n//   }, [post.pid]);\n//   return (\n//     <div className=\"post-container\">\n//       {/* <div className=\"post-title\">{post.title}</div> */}\n//       <div className=\"post-author\">Author: {post.author}</div>\n//       <div className=\"post-timestamp\">Posted on: {formatDate(post.date)}</div>\n//       <div className=\"post-body\">{post.text}</div>\n//       <div className=\"post-image\">\n//         {post.image && <img src={post.image} alt=\"Post\"/>}\n//       </div>\n//       {showComments && (\n//         <div className=\"comments-section\">\n//           <h4>Comments</h4>\n//           <ul>\n//             {comments && comments.map((comment) => (\n//               <li key={comment.id}>{comment.author}: {comment.message}</li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n//       <div className=\"post-buttons\">\n//         <button className=\"post-button\" onClick={() => onComment(post.pid)}>Leave a Comment</button>\n//         <button className=\"post-button\" onClick={() => onEditPost(post.pid)}>Edit Post</button>\n//         <button className=\"post-button\" onClick={() => onEditComment(post.pid)}>Edit My Comment</button>\n//         <button className=\"post-button\" onClick={() => setShowComments(!showComments)}>\n//           {showComments ? \"Hide Comments\" : \"Show Comments\"}\n//         </button>\n//       </div>\n\n//     </div>\n//   );\n// };\n\n// export default Posts;\n\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Posts = ({ post }) => {\n  const [showComments, setShowComments] = useState(true);\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const [isEditingPost, setIsEditingPost] = useState(false);\n  const [newComment, setNewComment] = useState('');\n  const [editedPost, setEditedPost] = useState(post.text);\n  const [comments, setComments] = useState([]);\n\n  const formatDate = (isoString) => {\n    const date = new Date(isoString);\n    return date.toLocaleString();\n  };\n\n  useEffect(() => {\n    // Assume axios is configured with the baseURL\n    axios.get(`/articles/${post.pid}`)\n      .then(response => {\n        setComments(response.data.articles[0].comments || []);\n      })\n      .catch(error => console.error('Error fetching comments:', error));\n  }, [post.pid]);\n\n  const handleAddComment = async () => {\n    // Logic for adding a new comment goes here\n  };\n\n  const handleEditPost = async () => {\n    // Logic for editing a post goes here\n  };\n\n  // JSX for the input field and button when adding a comment\n  const renderAddComment = () => (\n    <div className=\"post-button-container\">\n      <input\n        className=\"post-input\"\n        type=\"text\"\n        placeholder=\"Write your comment here...\"\n        value={newComment}\n        onChange={(e) => setNewComment(e.target.value)}\n      />\n      <button className=\"post-button\" onClick={handleAddComment}>Submit Comment</button>\n    </div>\n  );\n\n  // JSX for the input field and button when editing a post\n  const renderEditPost = () => (\n    <div className=\"post-button-container\">\n      <textarea\n        className=\"post-input\"\n        value={editedPost}\n        onChange={(e) => setEditedPost(e.target.value)}\n      />\n      <button className=\"post-button\" onClick={handleEditPost}>Save Post</button>\n    </div>\n  );\n\n  return (\n    <div className=\"post-container\">\n      <div className=\"post-author\">Author: {post.author}</div>\n      <div className=\"post-timestamp\">Posted on: {formatDate(post.date)}</div>\n      {isEditingPost ? renderEditPost() : <div className=\"post-body\">{post.text}</div>}\n      <div className=\"post-image\">\n        {post.image && <img src={post.image} alt=\"Post\" />}\n      </div>\n      <div className=\"post-buttons\">\n        {showComments && (\n          <button className=\"post-button\" onClick={() => setIsAddingComment(!isAddingComment)}>\n            {isAddingComment ? \"Cancel\" : \"Leave a Comment\"}\n          </button>\n        )}\n        <button className=\"post-button\" onClick={() => setIsEditingPost(!isEditingPost)}>\n          {isEditingPost ? \"Cancel\" : \"Edit Post\"}\n        </button>\n        <button className=\"post-button\" onClick={() => setShowComments(!showComments)}>\n          {showComments ? \"Hide Comments\" : \"Show Comments\"}\n        </button>\n      </div>\n      {isAddingComment && renderAddComment()}\n      {showComments && (\n        <div className=\"comments-section\">\n          <h4>Comments</h4>\n          <ul>\n            {comments.map((comment, index) => (\n              <li key={index}>{comment.author}: {comment.message}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Posts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}